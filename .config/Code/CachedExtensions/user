{"input":{"ourVersion":"1.41.0","commit":"9579eda04fdb3a9bba2750f15193e5fafe16b959","locale":"en","devMode":false,"absoluteFolderPath":"/home/rule/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1583437186994},"result":[{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"2.0.5","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.8.1"},"extensionKind":"ui","activationEvents":["onLanguage:ada","onLanguage:al","onLanguage:apex","onLanguage:asciidoc","onLanguage:bibtex","onLanguage:c","onLanguage:clojure","onLanguage:cfml","onLanguage:COBOL","onLanguage:coffeescript","onLanguage:cpp","onLanguage:csharp","onLanguage:css","onLanguage:d","onLanguage:dart","onLanguage:diagram","onLanguage:dockerfile","onLanguage:elixir","onLanguage:elm","onLanguage:erlang","onLanguage:flax","onLanguage:fsharp","onLanguage:fortran-modern","onLanguage:gdscript","onLanguage:genstat","onLanguage:go","onLanguage:graphql","onLanguage:groovy","onLanguage:haskell","onLanguage:html","onLanguage:haxe","onLanguage:hive-sql","onLanguage:kotlin","onLanguage:java","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:jsonc","onLanguage:julia","onLanguage:latex","onLanguage:less","onLanguage:lisp","onLanguage:lua","onLanguage:makefile","onLanguage:markdown","onLanguage:matlab","onLanguage:nim","onLanguage:objective-c","onLanguage:objective-cpp","onLanguage:objectpascal","onLanguage:pascal","onLanguage:perl","onLanguage:perl6","onLanguage:pig","onLanguage:plaintext","onLanguage:plsql","onLanguage:php","onLanguage:powershell","onLanguage:puppet","onLanguage:python","onLanguage:r","onLanguage:racket","onLanguage:ruby","onLanguage:rust","onLanguage:scala","onLanguage:sas","onLanguage:sass","onLanguage:scss","onLanguage:shaderlab","onLanguage:shellscript","onLanguage:sql","onLanguage:stata","onLanguage:stylus","onLanguage:swift","onLanguage:tcl","onLanguage:terraform","onLanguage:twig","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:vb","onLanguage:verilog","onLanguage:vue","onLanguage:yaml"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"main":"./out/extension","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","lint":"tslint -c tslint.json 'src/**/*.ts'"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"backgroundColor":"transparent"},{"tag":"?","color":"#3498DB","strikethrough":false,"backgroundColor":"transparent"},{"tag":"//","color":"#474747","strikethrough":true,"backgroundColor":"transparent"},{"tag":"todo","color":"#FF8C00","strikethrough":false,"backgroundColor":"transparent"},{"tag":"*","color":"#98C379","strikethrough":false,"backgroundColor":"transparent"}]}}}},"devDependencies":{"typescript":"3.4.5","vsce":"^1.61.0","vscode":"^1.1.34","@types/node":"^12.0.1","tslint":"^5.16.0"},"uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b","isBuiltin":false,"isUnderDevelopment":false,"id":"aaron-bond.better-comments","identifier":{"value":"aaron-bond.better-comments","_lower":"aaron-bond.better-comments"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/aaron-bond.better-comments-2.0.5","path":"/home/rule/.vscode/extensions/aaron-bond.better-comments-2.0.5","scheme":"file"}},{"name":"asp-net-core-switcher","displayName":"ASP.NET Core Switcher","description":"Quickly switch between views, controllers, pages, page models and Blazor components in ASP.NET Core using keybindings, context menu or command palette.","publisher":"adrianwilczynski","repository":{"type":"git","url":"https://github.com/AdrianWilczynski/AspNetCoreSwitcher.git"},"icon":"img/logo.png","version":"2.0.2","engines":{"vscode":"^1.32.0"},"categories":["Other"],"keywords":["ASP.NET Core",".NET Core","Razor Pages","MVC","Blazor","C#","CSharp","Razor","Keybindings","Keybinding","Switch","Switcher","Navigate","Navigation","Jump","Open"],"activationEvents":["onLanguage:csharp","onLanguage:razor","onLanguage:aspnetcorerazor"],"main":"./out/extension.js","contributes":{"commands":[{"command":"extension.goToView","title":"Go to View","enablement":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToController","title":"Go to Controller","enablement":"resourceFilename=~ /.*\\.cshtml$/ && isView"},{"command":"extension.addView","title":"Add View","enablement":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToPage","title":"Go to Page","enablement":"resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"},{"command":"extension.goToPageModel","title":"Go to PageModel","enablement":"resourceFilename=~ /.*\\.cshtml$/ && isPage"},{"command":"extension.goToBlazorComponent","title":"Go to Component","enablement":"resourceFilename=~ /.*\\.razor\\.cs$/ && resourceScheme == file"},{"command":"extension.goToCodeBehind","title":"Go to CodeBehind","enablement":"resourceFilename=~ /.*\\.razor$/ && resourceScheme == file"}],"keybindings":[{"command":"extension.goToView","key":"alt+i","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToController","key":"alt+i","when":"resourceFilename=~ /.*\\.cshtml$/ && isView"},{"command":"extension.goToView","key":"alt+o","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToController","key":"alt+o","when":"resourceFilename=~ /.*\\.cshtml$/ && isView"},{"command":"extension.addView","key":"alt+p","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToPage","key":"alt+o","when":"resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"},{"command":"extension.goToPageModel","key":"alt+o","when":"resourceFilename=~ /.*\\.cshtml$/ && isPage"},{"command":"extension.goToBlazorComponent","key":"alt+o","when":"resourceFilename=~ /.*\\.razor\\.cs$/ && resourceScheme == file"},{"command":"extension.goToCodeBehind","key":"alt+o","when":"resourceFilename=~ /.*\\.razor$/ && resourceScheme == file"}],"menus":{"editor/context":[{"command":"extension.goToView","group":"navigation","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToController","group":"navigation","when":"resourceFilename=~ /.*\\.cshtml$/ && isView"},{"command":"extension.addView","group":"1_modification","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToPage","group":"navigation","when":"resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"},{"command":"extension.goToPageModel","group":"navigation","when":"resourceFilename=~ /.*\\.cshtml$/ && isPage"},{"command":"extension.goToBlazorComponent","group":"navigation","when":"resourceFilename=~ /.*\\.razor\\.cs$/ && resourceScheme == file"},{"command":"extension.goToCodeBehind","group":"navigation","when":"resourceFilename=~ /.*\\.razor$/ && resourceScheme == file"}],"commandPalette":[{"command":"extension.goToView","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToController","when":"resourceFilename=~ /.*\\.cshtml$/ && isView"},{"command":"extension.addView","when":"resourceFilename=~ /.*(?<!\\.cshtml|\\.razor)\\.cs$/ && isController"},{"command":"extension.goToPage","when":"resourceFilename=~ /.*\\.cshtml\\.cs$/ && isPageModel"},{"command":"extension.goToPageModel","when":"resourceFilename=~ /.*\\.cshtml$/ && isPage"},{"command":"extension.goToBlazorComponent","when":"resourceFilename=~ /.*\\.razor\\.cs$/ && resourceScheme == file"},{"command":"extension.goToCodeBehind","when":"resourceFilename=~ /.*\\.razor$/ && resourceScheme == file"}]}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/chai":"^4.1.7","@types/mocha":"^2.2.42","@types/node":"^10.12.21","chai":"^4.2.0","tslint":"^5.12.1","typescript":"^3.3.1","vscode":"^1.1.28"},"uuid":"6bb12ca5-c317-4276-92d8-6905f9815982","isBuiltin":false,"isUnderDevelopment":false,"id":"adrianwilczynski.asp-net-core-switcher","identifier":{"value":"adrianwilczynski.asp-net-core-switcher","_lower":"adrianwilczynski.asp-net-core-switcher"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/adrianwilczynski.asp-net-core-switcher-2.0.2","path":"/home/rule/.vscode/extensions/adrianwilczynski.asp-net-core-switcher-2.0.2","scheme":"file"}},{"name":"path-intellisense","displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"1.4.2","publisher":"christian-kohler","engines":{"vscode":"^1.0.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"}}}},"main":"./out/src/extension","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/minimatch":"^2.0.29","typescript":"^2.3.2","vscode":"^0.11.0"},"dependencies":{"minimatch":"^3.0.4"},"uuid":"a41c1549-4053-44d4-bf30-60fc809b4a86","isBuiltin":false,"isUnderDevelopment":false,"id":"christian-kohler.path-intellisense","identifier":{"value":"christian-kohler.path-intellisense","_lower":"christian-kohler.path-intellisense"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/christian-kohler.path-intellisense-1.4.2","path":"/home/rule/.vscode/extensions/christian-kohler.path-intellisense-1.4.2","scheme":"file"}},{"name":"gitignore","displayName":"gitignore","description":"Language support for .gitignore files. Lets you pull .gitignore files from the https://github.com/github/gitignore repository.","version":"0.6.0","publisher":"codezombiech","icon":"icon.png","repository":{"type":"git","url":"https://github.com/CodeZombieCH/vscode-gitignore"},"bugs":{"url":"https://github.com/CodeZombieCH/vscode-gitignore/issues"},"homepage":"https://github.com/CodeZombieCH/vscode-gitignore/issues","license":"MIT","engines":{"vscode":"^1.18.0"},"categories":["Programming Languages","Other"],"activationEvents":["onCommand:addgitignore"],"main":"./out/extension","contributes":{"commands":[{"command":"addgitignore","title":"Add gitignore"}],"configuration":{"type":"object","title":"gitignore extension configuration","properties":{"gitignore.cacheExpirationInterval":{"type":"integer","default":3600,"description":"Number of seconds the list of `.gitignore` files retrieved from github will be cached"}}},"languages":[{"id":"gitignore","aliases":["Gitignore"],"filenames":[".gitignore"],"configuration":"./gitignore.configuration.json"}],"grammars":[{"language":"gitignore","scopeName":"text.gitignore","path":"./syntaxes/gitignore.json"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.38","tslint":"^5.11.0","typescript":"^2.9.2","vsce":"^1.53.0","vscode":"^1.1.21"},"dependencies":{"github":"^13.1.1"},"uuid":"3e891cf9-53cb-49a3-8d01-8f0b1f0afb29","isBuiltin":false,"isUnderDevelopment":false,"id":"codezombiech.gitignore","identifier":{"value":"codezombiech.gitignore","_lower":"codezombiech.gitignore"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/codezombiech.gitignore-0.6.0","path":"/home/rule/.vscode/extensions/codezombiech.gitignore-0.6.0","scheme":"file"}},{"name":"supersharp","displayName":"Super Sharp (C# extensions)","description":"Some handy refactoring extensions for C#","version":"0.1.4","publisher":"craigthomas","engines":{"vscode":"^1.18.0"},"categories":["Other","Extension Packs"],"icon":"icon.png","keywords":["C#","CSharp","Refactoring","Refactor","Move class","Move interface"],"activationEvents":["onLanguage:csharp","onCommand:supersharp.moveTypeToFile"],"main":"./out/extension","contributes":{"commands":[{"command":"supersharp.moveTypeToFile","title":"Move type to file"},{"command":"supersharp.injectDependency","title":"Add dependency to constructor..."}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.6.1","vscode":"^1.1.6","@types/node":"^7.0.43","@types/mocha":"^2.2.42"},"uuid":"b77fdb35-f82d-4854-8205-a2783978a809","isBuiltin":false,"isUnderDevelopment":false,"id":"craigthomas.supersharp","identifier":{"value":"craigthomas.supersharp","_lower":"craigthomas.supersharp"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/craigthomas.supersharp-0.1.4","path":"/home/rule/.vscode/extensions/craigthomas.supersharp-0.1.4","scheme":"file"}},{"name":"netcore-extension-pack","displayName":".NET Core Extension Pack","description":"Popular Visual Studio Code extensions for .NET Core Development","version":"0.10.0","publisher":"doggy8088","icon":"icon.png","repository":"https://github.com/doggy8088/netcore-extension-pack","engines":{"vscode":"^1.30.0"},"categories":["Extension Packs"],"extensionPack":["ms-vscode.csharp","doggy8088.netcore-snippets","adrianwilczynski.asp-net-core-switcher","codezombiech.gitignore","jchannon.csharpextensions","Leopotam.csharpfixformat","craigthomas.supersharp","k--kato.docomment","aaron-bond.better-comments","quicktype.quicktype","jmrog.vscode-nuget-package-manager","tintoy.msbuild-project-tools","formulahendry.dotnet","schneiderpat.aspnet-helper","wayou.vscode-todo-highlight","christian-kohler.path-intellisense","pflannery.vscode-versionlens","formulahendry.dotnet-test-explorer"],"uuid":"a06ecf23-2446-4d50-8b93-c6144960462e","isBuiltin":false,"isUnderDevelopment":false,"id":"doggy8088.netcore-extension-pack","identifier":{"value":"doggy8088.netcore-extension-pack","_lower":"doggy8088.netcore-extension-pack"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/doggy8088.netcore-extension-pack-0.10.0","path":"/home/rule/.vscode/extensions/doggy8088.netcore-extension-pack-0.10.0","scheme":"file"}},{"name":"netcore-snippets","displayName":"Essential ASP.NET Core 3 Snippets","description":"High quality Code Snippets that boost your ASP.NET Core development productivity.","version":"3.1.4","publisher":"doggy8088","icon":"icon.png","repository":"https://github.com/doggy8088/netcore-snippets","engines":{"vscode":"^1.39.0"},"categories":["Snippets"],"activationEvents":["*"],"main":"src/extension","license":"MIT","keywords":[".net-core","asp.net-core","code-snippets"],"extensionDependencies":["tintoy.msbuild-project-tools"],"scripts":{"build":"tsc -p tsconfig.json","vsce:publish":"vsce publish","vsce:package":"vsce package","vsce:publish:patch":"vsce publish patch","vsce:publish:minor":"vsce publish minor","vsce:publish:major":"vsce publish major"},"devDependencies":{"@types/vscode":"^1.39.0","@types/node":"^10.16.3","ts-node":"^8.4.1","typescript":"^3.6.3","vsce":"^1.66.0"},"contributes":{"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}]},"uuid":"654caa5d-3ee0-4878-a5e9-fcba9582fa26","isBuiltin":false,"isUnderDevelopment":false,"id":"doggy8088.netcore-snippets","identifier":{"value":"doggy8088.netcore-snippets","_lower":"doggy8088.netcore-snippets"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/doggy8088.netcore-snippets-3.1.4","path":"/home/rule/.vscode/extensions/doggy8088.netcore-snippets-3.1.4","scheme":"file"}},{"name":"dotnet","displayName":".NET Core Tools","description":"Fast way to build, run and test .NET Core (C#, F#) project","version":"0.0.4","publisher":"formulahendry","icon":"logo.png","engines":{"vscode":"^1.18.0"},"categories":["Languages"],"keywords":["dotnet","Dot Net","csharp","fsharp",".NET Core"],"bugs":{"url":"https://github.com/formulahendry/vscode-dotnet/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-dotnet/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-dotnet.git"},"activationEvents":["onCommand:dotnet.build","onCommand:dotnet.run","onCommand:dotnet.test"],"main":"./out/extension","contributes":{"commands":[{"command":"dotnet.build","title":"Build .NET Core project"},{"command":"dotnet.run","title":"Run .NET Core project"},{"command":"dotnet.test","title":"Execute .NET Core tests"}],"menus":{"explorer/context":[{"when":"resourceExtname == .csproj","command":"dotnet.build","group":"navigation@1"},{"when":"resourceExtname == .csproj","command":"dotnet.run","group":"navigation@2"},{"when":"resourceExtname == .csproj","command":"dotnet.test","group":"navigation@3"},{"when":"resourceExtname == .fsproj","command":"dotnet.build","group":"navigation@1"},{"when":"resourceExtname == .fsproj","command":"dotnet.run","group":"navigation@2"},{"when":"resourceExtname == .fsproj","command":"dotnet.test","group":"navigation@3"},{"when":"resourceExtname == .sln","command":"dotnet.build","group":"navigation@1"}]},"configuration":{"type":"object","title":".NET Core Tools","properties":{"dotnet.enableTelemetry":{"type":"boolean","default":true,"description":"Whether to enable anonymous usage collection."}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^7.0.43","tslint":"^5.8.0","typescript":"^2.6.1","vscode":"^1.1.6"},"dependencies":{"applicationinsights":"^1.0.0"},"uuid":"17baf027-6531-408d-9dc4-d16f5c80fa1b","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.dotnet","identifier":{"value":"formulahendry.dotnet","_lower":"formulahendry.dotnet"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/formulahendry.dotnet-0.0.4","path":"/home/rule/.vscode/extensions/formulahendry.dotnet-0.0.4","scheme":"file"}},{"name":"dotnet-test-explorer","displayName":".NET Core Test Explorer","description":"Test Explorer for .NET Core (MSTest, xUnit, NUnit)","version":"0.7.1","publisher":"formulahendry","license":"MIT","icon":"testexplorer_dark.png","engines":{"vscode":"^1.25.1"},"categories":["Programming Languages"],"keywords":["MSTest","NUnit","xUnit","C#","F#"],"bugs":{"url":"https://github.com/formulahendry/vscode-dotnet-test-explorer/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-dotnet-test-explorer/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-dotnet-test-explorer.git"},"activationEvents":["workspaceContains:**/*.csproj","workspaceContains:**/*.fsproj","onView:dotnetTestExplorer"],"main":"./out/src/extension","contributes":{"views":{"test":[{"id":"dotnetTestExplorer","name":".NET Test Explorer"}]},"commands":[{"command":"dotnet-test-explorer.showLog","title":"Show log","icon":{"light":"resources/light/log.svg","dark":"resources/dark/log.svg"}},{"command":"dotnet-test-explorer.stop","title":"Stop running proccesses","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"dotnet-test-explorer.refreshTestExplorer","title":"Refresh","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"dotnet-test-explorer.runAllTests","title":"Run All Tests","icon":{"light":"resources/light/run.png","dark":"resources/dark/run.png"}},{"command":"dotnet-test-explorer.runTest","title":"Run Test","icon":{"light":"resources/light/run.svg","dark":"resources/dark/run.svg"}},{"command":"dotnet-test-explorer.runTestInContext","title":"Run .NET Core Test in context"},{"command":"dotnet-test-explorer.gotoTest","title":"Go to Test","icon":{"light":"resources/light/gototest.svg","dark":"resources/dark/gototest.svg"}},{"command":"dotnet-test-explorer.debugTest","title":"Debug Test"}],"menus":{"view/title":[{"command":"dotnet-test-explorer.showLog","when":"view == dotnetTestExplorer","group":"navigation@3"},{"command":"dotnet-test-explorer.stop","when":"view == dotnetTestExplorer","group":"navigation@2"},{"command":"dotnet-test-explorer.refreshTestExplorer","when":"view == dotnetTestExplorer","group":"navigation@1"},{"command":"dotnet-test-explorer.runAllTests","when":"view == dotnetTestExplorer","group":"navigation@0"}],"view/item/context":[{"command":"dotnet-test-explorer.runTest","when":"view == dotnetTestExplorer","group":"dotnetTestExplorer@0"},{"command":"dotnet-test-explorer.runTest","when":"view == dotnetTestExplorer","group":"inline"},{"command":"dotnet-test-explorer.gotoTest","when":"viewItem == test","group":"dotnetTestExplorer@1"},{"command":"dotnet-test-explorer.debugTest","when":"viewItem == test","group":"dotnetTestExplorer@2"}],"editor/context":[{"command":"dotnet-test-explorer.runTestInContext","group":"dotnetTestExplorer@0","when":"resourceLangId == csharp"},{"command":"dotnet-test-explorer.runTestInContext","group":"dotnetTestExplorer@0","when":"resourceLangId == fsharp"},{"command":"dotnet-test-explorer.runTestInContext","group":"dotnetTestExplorer@0","when":"resourceLangId == vb"}]},"configuration":{"type":"object","title":".NET Core Test Explorer","properties":{"dotnet-test-explorer.enableTelemetry":{"type":"boolean","default":true,"description":"Whether to enable anonymous usage collection."},"dotnet-test-explorer.testProjectPath":{"type":"string","default":"","description":"Glob pattern that points to path of .NET Core test project(s)."},"dotnet-test-explorer.useTreeView":{"type":"boolean","default":true,"description":"If false, will list all tests as the full namespace. When set to true a tree will be created based on the namespaces of the tests. (Only xUnit tests will be listed in a tree view)"},"dotnet-test-explorer.showCodeLens":{"type":"boolean","default":true,"description":"Determines whether to show the CodeLens test status or not."},"dotnet-test-explorer.codeLensFailed":{"type":"string","default":"","description":"The text to display in the code lens when a test has failed."},"dotnet-test-explorer.codeLensPassed":{"type":"string","default":"","description":"The text to display in the code lens when a test has passed."},"dotnet-test-explorer.codeLensSkipped":{"type":"string","default":"","description":"The text to display in the code lens when a test has been skipped."},"dotnet-test-explorer.pathForResultFile":{"type":"string","default":"","description":"The path to (temporarily) store test result files in"},"dotnet-test-explorer.autoExpandTree":{"type":"boolean","default":false,"description":"If true, the tree will be in an expanded state by default"},"dotnet-test-explorer.addProblems":{"type":"boolean","default":true,"description":"If true, failed test will add to the problems view"},"dotnet-test-explorer.autoWatch":{"type":"boolean","default":false,"description":"If true, starts dotnet watch test after test discovery is completed"},"dotnet-test-explorer.testArguments":{"type":"string","default":"","description":"Additional arguments that are added to the dotnet test command."},"dotnet-test-explorer.leftClickAction":{"type":"string","default":"gotoTest","enum":["gotoTest","runTest","doNothing"],"description":"What happens when a test in the list is left clicked."},"dotnet-test-explorer.runInParallel":{"type":"boolean","default":false,"description":"If true, will discover/build and run test in parallel if you have multiple test projects"}}},"keybindings":[{"command":"dotnet-test-explorer.runTestInContext","key":"alt+r alt+c","mac":"alt+r alt+c","when":"editorTextFocus"},{"command":"dotnet-test-explorer.rerunLastCommand","key":"alt+r alt+r","mac":"alt+r alt+r"},{"command":"dotnet-test-explorer.runAllTests","key":"alt+r alt+a","mac":"alt+r alt+a"}]},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test","tslint":"tslint -t verbose src/**/*.ts"},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^8.10.36","@types/sinon":"^4.3.0","mocha":"^6.1.4","sinon":"^4.5.0","tslint":"^5.6.0","typescript":"^2.6.2","vscode":"^1.1.34"},"dependencies":{"applicationinsights":"^1.0.5","chokidar":"^2.1.0","fkill":"^5.3.0","glob":"^7.1.2","ts-node":"^7.0.1","xmldom":"^0.1.27"},"uuid":"42853f4f-0c67-4aa7-bb79-a00fec9146c4","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.dotnet-test-explorer","identifier":{"value":"formulahendry.dotnet-test-explorer","_lower":"formulahendry.dotnet-test-explorer"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/formulahendry.dotnet-test-explorer-0.7.1","path":"/home/rule/.vscode/extensions/formulahendry.dotnet-test-explorer-0.7.1","scheme":"file"}},{"name":"csharpextensions","displayName":"C# Extensions","description":"C# IDE Extensions for VSCode","author":"Jonathan Channon","license":"SEE LICENSE IN license.txt","version":"1.3.1","publisher":"jchannon","engines":{"vscode":"^1.5.0"},"repository":"https://github.com/jchannon/csharpextensions","icon":"logo.png","categories":["Languages","Linters","Snippets"],"activationEvents":["onLanguage:csharp","onCommand:csharpextensions.createClass","onCommand:csharpextensions.createInterface"],"main":"./out/src/extension","contributes":{"commands":[{"command":"csharpextensions.createClass","title":"New C# Class"},{"command":"csharpextensions.createInterface","title":"New C# Interface"}],"menus":{"explorer/context":[{"group":"navigation@-1","command":"csharpextensions.createClass"},{"group":"navigation@-1","command":"csharpextensions.createInterface"}]},"configuration":{"title":"C# Extensions configuration","properties":{"csharpextensions.privateMemberPrefix":{"type":"string","default":"","description":"Prefix for generated private member declarations"},"csharpextensions.useThisForCtorAssignments":{"type":"boolean","default":true,"description":"Wether or not a ctor assignment of a property or variable should be prefixed with this."},"csharpextensions.reFormatAfterChange":{"type":"boolean","default":true,"description":"If true the document will be reformatted after codeactions are used."}}}},"scripts":{"vscode:prepublish":"node node_modules/typescript/bin/tsc -p ./","compile":"node node_modules/typescript/bin/tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"dependencies":{"find-parent-dir":"^0.3.0","find-up-glob":"^1.0.0"},"uuid":"e046ec1e-3907-466b-aaea-ff1956a46d27","isBuiltin":false,"isUnderDevelopment":false,"id":"jchannon.csharpextensions","identifier":{"value":"jchannon.csharpextensions","_lower":"jchannon.csharpextensions"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/jchannon.csharpextensions-1.3.1","path":"/home/rule/.vscode/extensions/jchannon.csharpextensions-1.3.1","scheme":"file"}},{"name":"vscode-nuget-package-manager","displayName":"NuGet Package Manager","description":"Add or remove .NET Core 1.1+ package references to/from your project's .csproj or .fsproj file using Code's Command Palette.","version":"1.1.6","publisher":"jmrog","author":"Jason Rogers <jason@jmichaelrogers.com>","license":"MIT","keywords":["nuget","package","csproj","fsproj",".net core","manager","add","remove","install","C#","F#"],"engines":{"vscode":"^1.10.0"},"categories":["Other"],"activationEvents":["onCommand:extension.addNuGetPackage","onCommand:extension.removeNuGetPackage"],"main":"./out/src/extension","contributes":{"commands":[{"command":"extension.addNuGetPackage","title":"NuGet Package Manager: Add Package"},{"command":"extension.removeNuGetPackage","title":"NuGet Package Manager: Remove Package"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"dependencies":{"https-proxy-agent":"^1.0.0","node-fetch":"1.6.3","xml2js":"0.4.17"},"devDependencies":{"@types/expect":"^1.20.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","expect":"^1.20.2","gulp":"^3.9.1","gulp-rename":"^1.2.2","gulp-xml2js":"^0.1.1","mocha":"^2.3.3","typescript":"^2.2.2","vscode":"^1.0.0"},"bugs":{"url":"https://github.com/jmrog/vscode-nuget-package-manager/issues"},"homepage":"https://github.com/jmrog/vscode-nuget-package-manager/blob/master/README.md","repository":{"type":"git","url":"https://github.com/jmrog/vscode-nuget-package-manager.git"},"uuid":"6989d633-909b-4ca5-b499-7160e45a54d6","isBuiltin":false,"isUnderDevelopment":false,"id":"jmrog.vscode-nuget-package-manager","identifier":{"value":"jmrog.vscode-nuget-package-manager","_lower":"jmrog.vscode-nuget-package-manager"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6","path":"/home/rule/.vscode/extensions/jmrog.vscode-nuget-package-manager-1.1.6","scheme":"file"}},{"name":"docomment","version":"0.1.8","publisher":"k--kato","engines":{"vscode":"^1.35.0"},"displayName":"C# XML Documentation Comments","description":"Generate C# XML documentation comments for ///","categories":["Other"],"galleryBanner":{"color":"#4F87FF","theme":"light"},"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"C# XML Documentation Comments configuration","properties":{"docomment.syntax":{"type":"string","enum":["single","delimited"],"default":"single","description":"Comments are single-line comments that start with three slashes (///) (\"single\"), or delimited comments that start with a slash and two stars (/**) (\"delimited\")."},"docomment.activateOnEnter":{"type":"boolean","default":false,"description":"Press the Enter key to activate a command."},"docomment.advanced":{"type":"object","description":"User-controllable options.","properties":{"cs":{"type":"object","description":"C# options.","properties":{"namespace":{"type":"object","properties":{"attributes":{"type":"array","default":["summary"],"items":{"attribute":{"type":"string"}}}}},"class":{"type":"object","properties":{"attributes":{"type":"array","default":["summary","typeparam"],"items":{"attribute":{"type":"string"}}}}},"interface":{"type":"object","properties":{"attributes":{"type":"array","default":["summary","typeparam"],"items":{"attribute":{"type":"string"}}}}},"struct":{"type":"object","properties":{"attributes":{"type":"array","default":["summary"],"items":{"attribute":{"type":"string"}}}}},"enum":{"type":"object","properties":{"attributes":{"type":"array","default":["summary"],"items":{"attribute":{"type":"string"}}}}},"delegate":{"type":"object","properties":{"attributes":{"type":"array","default":["summary","param","typeparam","returns"],"items":{"attribute":{"type":"string"}}}}},"field":{"type":"object","properties":{"attributes":{"type":"array","default":["summary","value"],"items":{"attribute":{"type":"string"}}}}},"property":{"type":"object","properties":{"attributes":{"type":"array","default":["summary","value"],"items":{"attribute":{"type":"string"}}}}},"method":{"type":"object","properties":{"attributes":{"type":"array","default":["summary","param","typeparam","returns"],"items":{"attribute":{"type":"string"}}}}},"event":{"type":"object","properties":{"attributes":{"type":"array","default":["summary"],"items":{"attribute":{"type":"string"}}}}}}}}}}}},"activationEvents":["onLanguage:csharp"],"keywords":["XML Documentation Comments","C#"],"dependencies":{},"devDependencies":{"@types/mocha":"^5.2.7","@types/node":"^12.0.8","coveralls":"^3.0.4","istanbul":"^0.4.5","mocha":"^6.1.4","mocha-lcov-reporter":"^1.3.0","tslint":"^5.17.0","typescript":"^3.5.2","vscode":"^1.1.34"},"extensionDependencies":[],"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -p ./","watch":"tsc -watch -p ./","coverage_travis":"./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec --ui tdd ./out/test/**/*.js","coverage":"./node_modules/.bin/istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec --ui tdd ./out/test/**/*.js","postinstall":"node ./node_modules/vscode/bin/install"},"icon":"images/docomment.png","license":"MIT","homepage":"https://github.com/kasecato/vscode-docomment#readme","repository":{"type":"git","url":"https://github.com/kasecato/vscode-docomment"},"bugs":{"url":"https://github.com/kasecato/vscode-docomment/issues"},"uuid":"d1a2eab4-aa6e-4094-93b3-6a007f60bd9d","isBuiltin":false,"isUnderDevelopment":false,"id":"k--kato.docomment","identifier":{"value":"k--kato.docomment","_lower":"k--kato.docomment"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/k--kato.docomment-0.1.8","path":"/home/rule/.vscode/extensions/k--kato.docomment-0.1.8","scheme":"file"}},{"name":"csharpfixformat","displayName":"C# FixFormat","description":"Fix format of usings / indents / braces / empty lines","icons":{"default":"icon-128.png"},"icon":"icon-128.png","version":"0.0.84","publisher":"Leopotam","engines":{"vscode":"^1.37.0"},"categories":["Formatters","Programming Languages","Linters","Other"],"activationEvents":["onLanguage:csharp","onCommand:csharpfixformat.formatFolder"],"author":{"name":"Leopotam","email":"leopotam@gmail.com"},"main":"./out/extension.js","contributes":{"commands":[{"command":"csharpfixformat.formatFolder","title":"C#FixFormat: format C# files"}],"menus":{"explorer/context":[{"when":"explorerResourceIsFolder","command":"csharpfixformat.formatFolder"}]},"configuration":{"title":"C# FixFormat configuration","properties":{"csharpfixformat.sort.usings.enabled":{"type":"boolean","default":true,"description":"Should usings be sorted or not."},"csharpfixformat.sort.usings.order":{"type":"string","default":"System","description":"Put namespaces in proper order. Values should be splitted with space."},"csharpfixformat.sort.usings.splitGroups":{"type":"boolean","default":false,"description":"Insert blank line between using blocks grouped by first part of namespace."},"csharpfixformat.style.enabled":{"type":"boolean","default":true,"description":"Enable code reformat with style options."},"csharpfixformat.style.braces.onSameLine":{"type":"boolean","default":true,"description":"Should open braces be kept on expression line (K&R style) or on new line."},"csharpfixformat.style.braces.allowInlines":{"type":"boolean","default":true,"description":"Allow expressions inside braces at one line."},"csharpfixformat.style.indent.preprocessorIgnored":{"type":"boolean","default":true,"description":"Should preprocessor directives ignore indentation or use it."},"csharpfixformat.style.indent.regionIgnored":{"type":"boolean","default":false,"description":"Should #region / #endregion directives ignore indentation or use it."},"csharpfixformat.style.indent.switchCaseIgnored":{"type":"boolean","default":false,"description":"Should switch cases ignore indentation or use it."},"csharpfixformat.style.newline.atEnd":{"type":"boolean","default":false,"description":"Force adds new empty line at end."},"csharpfixformat.style.newline.elseCatch":{"type":"boolean","default":false,"description":"Force places else / catch expression to new line."},"csharpfixformat.style.newline.maxAmount":{"type":"number","default":2,"description":"Amount of new line (\\n) symbols allowed in row. 1 means no blank lines. Use 0 for disable."},"csharpfixformat.style.operators.onSameLine":{"type":"boolean","default":true,"description":"Should operators be kept on expression line or on new line for multilined expressions."},"csharpfixformat.style.spaces.beforeParenthesis":{"type":"boolean","default":true,"description":"Space before '(' - opening parenthesis."},"csharpfixformat.style.spaces.afterParenthesis":{"type":"boolean","default":true,"description":"Space after ')' - closing parenthesis."},"csharpfixformat.style.spaces.beforeIndexerBracket":{"type":"boolean","default":true,"description":"Override spaces.beforeBracket rule for indexer sequence 'this['."},"csharpfixformat.style.spaces.beforeBracket":{"type":"boolean","default":false,"description":"Space before '[' - opening bracket."},"csharpfixformat.style.spaces.afterBracket":{"type":"boolean","default":true,"description":"Space after ']' - closing bracket."},"csharpfixformat.style.spaces.insideEmptyParenthis":{"type":"boolean","default":false,"description":"Space inside '()' - empty parenthis."},"csharpfixformat.style.spaces.insideEmptyBraces":{"type":"boolean","default":true,"description":"Space inside '{}' - empty braces."},"csharpfixformat.style.spaces.insideEmptyBrackets":{"type":"boolean","default":false,"description":"Space inside '[]' - empty brackets."},"csharpfixformat.style.spaces.removeAfterCommandBeforeParenthesis":{"type":"string","default":"","description":"Remove spaces after specified command and before (. Commands should be splitted with space."}}}},"keywords":["C#","csharp","sort","using","format"],"scripts":{"vscode:prepublish":"tsc -p ./","watch":"node_modules/.bin/tsc -w -p ./","postinstall":"node ./node_modules/vscode/bin/install","package":"node_modules/.bin/vsce package"},"devDependencies":{"@types/node":"^12.7.2","tslint":"^5.19.0","typescript":"^3.5.3","vsce":"^1.66.0","vscode":"^1.1.36"},"license":"MIT","homepage":"https://github.com/Leopotam/vscode-csharpfixformat","repository":{"type":"git","url":"https://github.com/Leopotam/vscode-csharpfixformat"},"bugs":{"url":"https://github.com/Leopotam/vscode-csharpfixformat/issues"},"dependencies":{},"uuid":"eb7755c6-c13a-480e-b3d2-a054b29774b0","isBuiltin":false,"isUnderDevelopment":false,"id":"Leopotam.csharpfixformat","identifier":{"value":"Leopotam.csharpfixformat","_lower":"leopotam.csharpfixformat"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/leopotam.csharpfixformat-0.0.84","path":"/home/rule/.vscode/extensions/leopotam.csharpfixformat-0.0.84","scheme":"file"}},{"name":"csharp","publisher":"ms-dotnettools","version":"1.21.13","description":"C# for Visual Studio Code (powered by OmniSharp).","displayName":"C#","author":"Microsoft Corporation","license":"SEE LICENSE IN RuntimeLicenses/license.txt","icon":"images/csharpIcon.png","preview":false,"bugs":{"url":"https://github.com/OmniSharp/omnisharp-vscode/issues"},"repository":{"type":"git","url":"https://github.com/OmniSharp/omnisharp-vscode.git"},"categories":["Debuggers","Programming Languages","Linters","Snippets"],"keywords":["multi-root ready",".NET","ASP.NET",".NET Core","dotnet"],"defaults":{"omniSharp":"1.34.13","razor":"1.0.0-alpha3-5.0.0-preview.2.20120.8"},"main":"./dist/extension","scripts":{"vscode:prepublish":"tsc -p ./ && webpack --mode production","compile":"tsc -p ./ && gulp tslint","compileDev":"tsc -p ./ && gulp tslint && webpack --mode development","watch":"tsc -watch -p ./","tdd":"mocha --opts ./mocha.opts --watch --watch-extensions ts test/unitTests/**/*.test.ts*","test":"gulp test","test:unit":"gulp test:unit","test:feature":"gulp test:feature","test:integration":"gulp test:integration","test:integration:singleCsproj":"gulp test:integration:singleCsproj","test:integration:slnWithCsproj":"gulp test:integration:slnWithCsproj","test:release":"mocha --opts ./mocha.opts test/releaseTests/**/*.test.ts","test:artifacts":"mocha --opts ./mocha.opts test/artifactTests/**/*.test.ts","postinstall":"node ./node_modules/vscode/bin/install","cov:instrument":"gulp cov:instrument","cov:merge":"gulp cov:merge","cov:merge-html":"gulp cov:merge-html","cov:report":"npm-run-all cov:report:integration cov:report:unit","cov:report:unit":"gulp cov:report:unit","cov:report:integration":"gulp cov:report:integration","unpackage:vsix":"gulp vsix:release:unpackage","gulp":"gulp"},"nyc":{"include":["src/**/*.ts","src/**/*.tsx"],"extension":[".ts",".tsx"],"require":["ts-node/register","source-map-support/register"],"sourceMap":true,"instrument":true},"dependencies":{"async-file":"2.0.2","fs-extra":"7.0.1","http-proxy-agent":"2.1.0","https-proxy-agent":"^3.0.1","jsonc-parser":"2.0.3","microsoft.aspnetcore.razor.vscode":"https://download.visualstudio.microsoft.com/download/pr/9eb262e8-f9ae-4a27-969d-5eb831a797c5/6960b69edc66c1023db5a66ff9552203/microsoft.aspnetcore.razor.vscode-5.0.0-preview.2.20120.8.tgz","mkdirp":"0.5.1","node-filter-async":"1.1.1","remove-bom-buffer":"3.0.0","request-light":"0.2.4","rxjs":"6.4.0","semver":"5.6.0","stream":"0.0.2","strip-bom":"3.0.0","tmp":"0.0.33","vscode-debugprotocol":"1.33.0","vscode-extension-telemetry":"0.1.1","yauzl":"2.10.0"},"devDependencies":{"@types/archiver":"2.1.2","@types/chai":"4.1.7","@types/chai-arrays":"1.0.2","@types/chai-as-promised":"7.1.0","@types/chai-string":"1.4.1","@types/del":"3.0.1","@types/fs-extra":"5.0.4","@types/gulp":"4.0.5","@types/gulp-mocha":"0.0.32","@types/istanbul":"0.4.30","@types/minimist":"1.2.0","@types/mkdirp":"0.5.2","@types/mocha":"5.2.5","@types/node":"10.12.24","@types/semver":"5.5.0","@types/tmp":"0.0.33","@types/unzipper":"^0.9.1","@types/yauzl":"2.9.1","archiver":"3.0.0","async-child-process":"1.1.1","async-shelljs":"0.1.2","chai":"4.2.0","chai-arrays":"2.0.0","chai-as-promised":"7.1.1","chai-fs":"2.0.0","chai-string":"1.5.0","codecov":"3.6.5","copyfiles":"2.1.0","cross-env":"5.2.0","del":"3.0.0","find-versions":"3.0.0","get-port":"4.1.0","glob-promise":"3.4.0","gulp":"4.0.0","gulp-mocha":"6.0.0","gulp-tslint":"8.1.3","istanbul":"0.4.5","ltcdr":"2.2.1","minimist":"1.2.0","mocha":"5.2.0","mocha-typescript":"1.1.17","mock-fs":"4.8.0","mock-http-server":"0.2.0","natives":"1.1.6","npm-run-all":"4.1.5","nyc":"13.3.0","plist":"3.0.1","remap-istanbul":"0.13.0","source-map-support":"0.5.10","ts-loader":"5.3.3","ts-node":"8.0.2","tslint":"5.12.1","tslint-microsoft-contrib":"6.0.0","tslint-no-unused-expression-chai":"0.1.4","typescript":"^3.3.3","unzipper":"0.9.10","vsce":"1.57.0","vscode":"1.1.33","webpack":"4.29.3","webpack-cli":"^3.2.3"},"runtimeDependencies":[{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/e5c16d5c-a379-4ea6-afbe-cbedf90a0876/63e562d25165bd940995465124a5e0d1/omnisharp-win-x86-1.34.13.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x86-1.34.13.zip","installPath":".omnisharp/1.34.13","platforms":["win32"],"architectures":["x86"],"installTestPath":"./.omnisharp/1.34.13/OmniSharp.exe","platformId":"win-x86","integrity":"1E052090B2C1F6D42C20E3CA1318738C574D3D846401F0F9BB2B7F22617919C7"},{"id":"OmniSharp","description":"OmniSharp for Windows (.NET 4.6 / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/e5c16d5c-a379-4ea6-afbe-cbedf90a0876/b89bee247c303002d7b045d9787ffc1e/omnisharp-win-x64-1.34.13.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-win-x64-1.34.13.zip","installPath":".omnisharp/1.34.13","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.omnisharp/1.34.13/OmniSharp.exe","platformId":"win-x64","integrity":"92FE3BE46064B8AA17CD714671A28779D1B720D58B45B89E35D1A0DE0898D1CD"},{"id":"OmniSharp","description":"OmniSharp for OSX","url":"https://download.visualstudio.microsoft.com/download/pr/e5c16d5c-a379-4ea6-afbe-cbedf90a0876/fcda5b4d6b207245a2e76118d8b059c2/omnisharp-osx-1.34.13.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-osx-1.34.13.zip","installPath":".omnisharp/1.34.13","platforms":["darwin"],"binaries":["./mono.osx","./run"],"installTestPath":"./.omnisharp/1.34.13/run","platformId":"osx","integrity":"92F65C0F8F0A9748DF9878E41D2BA047D1073B27FE0C161129E1EC21DAEA1998"},{"id":"OmniSharp","description":"OmniSharp for Linux (x86)","url":"https://download.visualstudio.microsoft.com/download/pr/e5c16d5c-a379-4ea6-afbe-cbedf90a0876/f8aa092d3c2b81ebbcd065c79fc3d7ac/omnisharp-linux-x86-1.34.13.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x86-1.34.13.zip","installPath":".omnisharp/1.34.13","platforms":["linux"],"architectures":["x86","i686"],"binaries":["./mono.linux-x86","./run"],"installTestPath":"./.omnisharp/1.34.13/run","platformId":"linux-x86","integrity":"47F0CEDE055AC3112E0B288FFDECEEFC46C258EE6E193DB931E191BD74FD4C2C"},{"id":"OmniSharp","description":"OmniSharp for Linux (x64)","url":"https://download.visualstudio.microsoft.com/download/pr/e5c16d5c-a379-4ea6-afbe-cbedf90a0876/0dbfeeaff92f544c022dc7406b3ac2e8/omnisharp-linux-x64-1.34.13.zip","fallbackUrl":"https://omnisharpdownload.blob.core.windows.net/ext/omnisharp-linux-x64-1.34.13.zip","installPath":".omnisharp/1.34.13","platforms":["linux"],"architectures":["x86_64"],"binaries":["./mono.linux-x86_64","./run"],"installTestPath":"./.omnisharp/1.34.13/run","platformId":"linux-x64","integrity":"96B16D8D029B07FCE4B212B50BBE65DDCBDC3B059AC1F5D72F6F893456DB74D3"},{"id":"Debugger","description":".NET Core Debugger (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/8453f1ae-2bda-4d6a-97fa-9a752f968dc1/5157a2a463cc8a4afa0621f1ec594732/coreclr-debug-win7-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-22-0/coreclr-debug-win7-x64.zip","installPath":".debugger","platforms":["win32"],"architectures":["x86_64"],"installTestPath":"./.debugger/vsdbg-ui.exe","integrity":"9188583AF7E150C8A8AB7501A75C15A53EB5EA9E40D1ED93458E989A15B95FF6"},{"id":"Debugger","description":".NET Core Debugger (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/8453f1ae-2bda-4d6a-97fa-9a752f968dc1/575994a4df09b34c3314ee30e007ed45/coreclr-debug-osx-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-22-0/coreclr-debug-osx-x64.zip","installPath":".debugger","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"B29D7DA252308470E215F52E09A632CA1B5E0A6F74D6A37473A7E4CFDF92266F"},{"id":"Debugger","description":".NET Core Debugger (linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/8453f1ae-2bda-4d6a-97fa-9a752f968dc1/0f8c37b08e1afd2360bde4a5764d403e/coreclr-debug-linux-x64.zip","fallbackUrl":"https://vsdebugger.blob.core.windows.net/coreclr-debug-1-22-0/coreclr-debug-linux-x64.zip","installPath":".debugger","platforms":["linux"],"architectures":["x86_64"],"binaries":["./vsdbg-ui","./vsdbg"],"installTestPath":"./.debugger/vsdbg-ui","integrity":"2F6657B3D3C1044E9293F9C7E498AF283600DEAAF052975EBFBDD1296C8C6C05"},{"id":"Razor","description":"Razor Language Server (Windows / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9eb262e8-f9ae-4a27-969d-5eb831a797c5/598cfb26425be866525df2f4cc76dab5/razorlanguageserver-win-x64-5.0.0-preview.2.20120.8.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-win-x64-5.0.0-preview.2.20120.8.zip","installPath":".razor","platforms":["win32"],"architectures":["x86_64"]},{"id":"Razor","description":"Razor Language Server (Windows / x86)","url":"https://download.visualstudio.microsoft.com/download/pr/9eb262e8-f9ae-4a27-969d-5eb831a797c5/91bb95b2c64fb0ed925f6c1b5d227342/razorlanguageserver-win-x86-5.0.0-preview.2.20120.8.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-win-x86-5.0.0-preview.2.20120.8.zip","installPath":".razor","platforms":["win32"],"architectures":["x86"]},{"id":"Razor","description":"Razor Language Server (Linux / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9eb262e8-f9ae-4a27-969d-5eb831a797c5/3fd0d88026a997250736c1c516cde2eb/razorlanguageserver-linux-x64-5.0.0-preview.2.20120.8.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-linux-x64-5.0.0-preview.2.20120.8.zip","installPath":".razor","platforms":["linux"],"architectures":["x86_64"],"binaries":["./rzls"]},{"id":"Razor","description":"Razor Language Server (macOS / x64)","url":"https://download.visualstudio.microsoft.com/download/pr/9eb262e8-f9ae-4a27-969d-5eb831a797c5/d46d6811b862fc656537427d41573c28/razorlanguageserver-osx-x64-5.0.0-preview.2.20120.8.zip","fallbackUrl":"https://razorvscodetest.blob.core.windows.net/languageserver/RazorLanguageServer-osx-x64-5.0.0-preview.2.20120.8.zip","installPath":".razor","platforms":["darwin"],"architectures":["x86_64"],"binaries":["./rzls"]}],"engines":{"vscode":"^1.31.0"},"activationEvents":["onDebugInitialConfigurations","onDebugResolve:coreclr","onDebugResolve:clr","onLanguage:csharp","onLanguage:aspnetcorerazor","onCommand:o.restart","onCommand:o.pickProjectAndStart","onCommand:o.showOutput","onCommand:dotnet.restore.project","onCommand:dotnet.restore.all","onCommand:dotnet.generateAssets","onCommand:csharp.downloadDebugger","onCommand:csharp.listProcess","onCommand:csharp.listRemoteProcess","onCommand:omnisharp.registerLanguageMiddleware","workspaceContains:project.json","workspaceContains:*.csproj","workspaceContains:*.sln","workspaceContains:*.csx","workspaceContains:*.cake","workspaceContains:**/*.csproj","workspaceContains:**/*.sln","workspaceContains:**/*.csx","workspaceContains:**/*.cake"],"contributes":{"configuration":{"title":"C# configuration","properties":{"csharp.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default C# formatter (requires restart)."},"csharp.suppressDotnetInstallWarning":{"type":"boolean","default":false,"description":"Suppress the warning that the .NET Core SDK is not on the path."},"csharp.unitTestDebuggingOptions":{"type":"object","description":"Options to use with the debugger when launching for unit test debugging. Any launch.json option is valid here.","default":{},"properties":{"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"type":{"type":"string","enum":["coreclr","clr"],"description":"Type type of code to debug. Can be either 'coreclr' for .NET Core debugging, or 'clr' for Desktop .NET Framework. 'clr' only works on Windows as the Desktop framework is Windows-only.","default":"coreclr"},"debugServer":{"type":"number","description":"For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode","default":4711}}},"csharp.suppressDotnetRestoreNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to perform a 'dotnet restore' when dependencies can't be resolved."},"csharp.suppressProjectJsonWarning":{"type":"boolean","default":false,"description":"Suppress the warning that project.json is no longer a supported project format for .NET Core applications"},"csharp.supressBuildAssetsNotification":{"type":"boolean","default":false,"description":"Suppress the notification window to add missing assets to build or debug the application."},"csharp.suppressHiddenDiagnostics":{"type":"boolean","default":true,"description":"Suppress 'hidden' diagnostics (such as 'unnecessary using directives') from appearing in the editor or the Problems pane."},"csharp.referencesCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown."},"csharp.testsCodeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the run and debug test CodeLens should be shown."},"csharp.maxProjectFileCountForDiagnosticAnalysis":{"type":"number","default":1000,"description":"Specifies the maximum number of files for which diagnostics are reported for the whole workspace. If this limit is exceeded, diagnostics will be shown for currently opened files only. Specify 0 or less to disable the limit completely."},"omnisharp.path":{"type":["string","null"],"default":null,"scope":"machine","description":"Specifies the path to OmniSharp. This can be the absolute path to an OmniSharp executable, a specific version number, or \"latest\". If a version number or \"latest\" is specified, the appropriate version of OmniSharp will be downloaded on your behalf."},"omnisharp.useGlobalMono":{"type":"string","default":"auto","scope":"machine","enum":["auto","always","never"],"enumDescriptions":["Automatically launch OmniSharp with \"mono\" if version 6.4.0 or greater is available on the PATH.","Always launch OmniSharp with \"mono\". If version 6.4.0 or greater is not available on the PATH, an error will be printed.","Never launch OmniSharp on a globally-installed Mono."],"description":"Launch OmniSharp with the globally-installed Mono. If set to \"always\", \"mono\" version 6.4.0 or greater must be available on the PATH. If set to \"auto\", OmniSharp will be launched with \"mono\" if version 6.4.0 or greater is available on the PATH."},"omnisharp.monoPath":{"type":["string","null"],"default":null,"scope":"machine","description":"Specifies the path to a mono installation to use when \"useGlobalMono\" is set to \"always\" or \"auto\", instead of the default system one."},"omnisharp.waitForDebugger":{"type":"boolean","default":false,"description":"Pass the --debug flag when launching the OmniSharp server to allow a debugger to be attached."},"omnisharp.loggingLevel":{"type":"string","default":"information","enum":["trace","debug","information","warning","error","critical"],"description":"Specifies the level of logging output from the OmniSharp server."},"omnisharp.autoStart":{"type":"boolean","default":true,"description":"Specifies whether the OmniSharp server will be automatically started or not. If false, OmniSharp can be started with the 'Restart OmniSharp' command"},"omnisharp.projectLoadTimeout":{"type":"number","default":60,"description":"The time Visual Studio Code will wait for the OmniSharp server to start. Time is expressed in seconds."},"omnisharp.maxProjectResults":{"type":"number","default":250,"description":"The maximum number of projects to be shown in the 'Select Project' dropdown (maximum 250)."},"omnisharp.defaultLaunchSolution":{"type":"string","default":null,"description":"The name of the default solution used at start up if the repo has multiple solutions. e.g.'MyAwesomeSolution.sln'. Default value is `null` which will cause the first in alphabetical order to be chosen."},"omnisharp.useEditorFormattingSettings":{"type":"boolean","default":true,"description":"Specifes whether OmniSharp should use VS Code editor settings for C# code formatting (use of tabs, indentation size)."},"omnisharp.minFindSymbolsFilterLength":{"type":"number","default":0,"description":"The minimum number of characters to enter before 'Go to Symbol in Workspace' operation shows any results."},"omnisharp.maxFindSymbolsItems":{"type":"number","default":1000,"description":"The maximum number of items that 'Go to Symbol in Workspace' operation can show. The limit is applied only when a positive number is specified here."},"omnisharp.disableMSBuildDiagnosticWarning":{"type":"boolean","default":false,"description":"Specifies whether notifications should be shown if OmniSharp encounters warnings or errors loading a project. Note that these warnings/errors are always emitted to the OmniSharp log"},"omnisharp.enableMsBuildLoadProjectsOnDemand":{"type":"boolean","default":false,"description":"If true, MSBuild project system will only load projects for files that were opened in the editor. This setting is useful for big C# codebases and allows for faster initialization of code navigation features only for projects that are relevant to code that is being edited. With this setting enabled OmniSharp may load fewer projects and may thus display incomplete reference lists for symbols."},"omnisharp.enableRoslynAnalyzers":{"type":"boolean","default":false,"description":"Enables support for roslyn analyzers, code fixes and rulesets."},"omnisharp.enableEditorConfigSupport":{"type":"boolean","default":false,"description":"Enables support for reading code style, naming convention and analyzer settings from .editorconfig."},"razor.plugin.path":{"type":["string","null"],"default":null,"scope":"machine","description":"Overrides the path to the Razor plugin dll."},"razor.devmode":{"type":"boolean","default":false,"description":"Forces the omnisharp-vscode extension to run in a mode that enables local Razor.VSCode deving."},"razor.disabled":{"type":"boolean","default":false,"description":"Specifies whether to disable Razor language features."},"razor.languageServer.directory":{"type":["string","null"],"default":null,"scope":"machine","description":"Overrides the path to the Razor Language Server directory."},"razor.languageServer.debug":{"type":"boolean","default":false,"description":"Specifies whether to wait for debug attach when launching the language server."},"razor.trace":{"type":"string","default":"Off","enum":["Off","Messages","Verbose"],"enumDescriptions":["Does not log messages from the Razor extension","Logs only some messages from the Razor extension","Logs all messages from the Razor extension"],"description":"Specifies whether to output all messages [Verbose], some messages [Messages] or not at all [Off]."},"razor.format.enable":{"type":"boolean","scope":"window","default":true,"description":"Enable/disable default Razor formatter."}}},"jsonValidation":[{"fileMatch":"project.json","url":"http://json.schemastore.org/project"},{"fileMatch":"omnisharp.json","url":"http://json.schemastore.org/omnisharp"}],"commands":[{"command":"o.restart","title":"Restart OmniSharp","category":"OmniSharp"},{"command":"o.pickProjectAndStart","title":"Select Project","category":"OmniSharp"},{"command":"o.reanalyze.allProjects","title":"Analyze all projects","category":"OmniSharp"},{"command":"o.reanalyze.currentProject","title":"Analyze current project","category":"OmniSharp"},{"command":"dotnet.generateAssets","title":"Generate Assets for Build and Debug","category":".NET"},{"command":"dotnet.restore.project","title":"Restore Project","category":".NET"},{"command":"dotnet.restore.all","title":"Restore All Projects","category":".NET"},{"command":"csharp.downloadDebugger","title":"Download .NET Core Debugger","category":"Debug"},{"command":"csharp.listProcess","title":"List process for attach","category":"CSharp"},{"command":"csharp.listRemoteProcess","title":"List processes on remote connection for attach","category":"CSharp"},{"command":"csharp.reportIssue","title":"Report an issue","category":"CSharp"},{"command":"extension.showRazorCSharpWindow","title":"Show Razor CSharp","category":"Razor"},{"command":"extension.showRazorHtmlWindow","title":"Show Razor Html","category":"Razor"},{"command":"razor.reportIssue","title":"Report a Razor issue","category":"Razor"}],"keybindings":[{"command":"o.showOutput","key":"Ctrl+Shift+F9","mac":"Cmd+Shift+F9"}],"snippets":[{"language":"csharp","path":"./snippets/csharp.json"}],"debuggers":[{"type":"coreclr","label":".NET Core","enableBreakpointsFor":{"languageIds":["csharp","razor","qsharp","aspnetcorerazor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.coreclrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole.","default":"${workspaceFolder}/out.txt"}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}}},"configurationSnippets":[{"label":".NET: Launch .NET Core Console App","description":"Launch a .NET Core Console App with a debugger.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole"}},{"label":".NET: Attach to local .NET Core Console App","description":"Attach a debugger to a .NET Core Console App.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickProcess}\""}},{"label":".NET: Launch a local .NET Core Web App","description":"Launch a .NET Core Web App with both a browser and a debugger.","body":{"name":".NET Core Launch (web)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"serverReadyAction":{"action":"openExternally","pattern":"^\"^\\\\\\\\s*Now listening on:\\\\\\\\s+(https?://\\\\\\\\S+)\""},"env":{"ASPNETCORE_ENVIRONMENT":"Development"},"sourceFileMap":{"/Views":"^\"\\${workspaceFolder}/Views\""}}},{"label":".NET: Launch a remote .NET Core Console App","description":"Launch a .NET Core Console App on a remote machine.","body":{"name":".NET Core Launch (console)","type":"coreclr","request":"launch","preLaunchTask":"build","program":"^\"\\${workspaceFolder}/bin/Debug/${1:<target-framework>}/${2:<project-name.dll>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\"","stopAtEntry":false,"console":"internalConsole","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${3:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${4:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}},{"label":".NET: Attach to remote .NET Core Console App","description":"Attach a debugger to a .NET Core Console App on a remote machine.","body":{"name":".NET Core Attach","type":"coreclr","request":"attach","processId":"^\"\\${command:pickRemoteProcess}\"","pipeTransport":{"pipeCwd":"^\"\\${workspaceFolder}\"","pipeProgram":"^\"${1:enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'}\"","pipeArgs":[],"debuggerPath":"^\"${2:enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg}\""}}}]},{"type":"clr","label":".NET","enableBreakpointsFor":{"languageIds":["csharp","razor","qsharp","aspnetcorerazor"]},"variables":{"pickProcess":"csharp.listProcess","pickRemoteProcess":"csharp.listRemoteProcess"},"adapterExecutableCommand":"csharp.clrAdapterExecutableCommand","aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","configurationAttributes":{"launch":{"type":"object","required":["program"],"properties":{"program":{"type":"string","description":"Path to the application dll or .NET Core host executable to launch.\nThis property normally takes the form: '${workspaceFolder}/bin/Debug/(target-framework)/(project-name.dll)'\nExample: '${workspaceFolder}/bin/Debug/netcoreapp1.1/MyProject.dll'\n\nWhere:\n(target-framework) is the framework that the debugged project is being built for. This is normally found in the project file as the 'TargetFramework' property.\n(project-name.dll) is the name of debugged project's build output dll. This is normally the same as the project file name but with a '.dll' extension.","default":"${workspaceFolder}/bin/Debug/<insert-target-framework-here>/<insert-project-name-here>.dll"},"cwd":{"type":"string","description":"Path to the working directory of the program being debugged. Default is the current workspace.","default":"${workspaceFolder}"},"args":{"anyOf":[{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the program.","default":""}]},"stopAtEntry":{"type":"boolean","description":"If true, the debugger should stop at the entry point of the target.","default":false},"launchBrowser":{"description":"Describes options to launch a web browser as part of launch","default":{"enabled":true},"type":"object","required":["enabled"],"properties":{"enabled":{"type":"boolean","description":"Whether web browser launch is enabled","default":true},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. This is used only if the platform-specific element (`osx`, `linux` or `windows`) doesn't specify a value for `args`. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"},"osx":{"description":"OSX-specific web launch configuration options. By default, this will start the browser using `open`.","default":{"command":"open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"linux":{"description":"Linux-specific web launch configuration options. By default, this will start the browser using `xdg-open`.","default":{"command":"xdg-open","args":"${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"xdg-open"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"${auto-detect-url}"}}},"windows":{"description":"Windows-specific web launch configuration options. By default, this will start the browser using `cmd /c start`.","default":{"command":"cmd.exe","args":"/C start ${auto-detect-url}"},"type":"object","required":["command"],"properties":{"command":{"type":"string","description":"The executable which will start the web browser","default":"cmd.exe"},"args":{"type":"string","description":"The arguments to pass to the command to open the browser. Use ${auto-detect-url} to automatically use the address the server is listening to.","default":"/C start ${auto-detect-url}"}}}}},"env":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the program.","default":{}},"envFile":{"type":"string","description":"Environment variables passed to the program by a file.","default":"${workspaceFolder}/.env"},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:Console.ReadLine)","VS Code's integrated terminal","External terminal that can be configured via user settings"],"description":"Where to launch the debug target.","default":"internalConsole"},"externalConsole":{"type":"boolean","description":"Attribute 'externalConsole' is deprecated, use 'console' instead.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true},"targetOutputLogPath":{"type":"string","description":"When set, text that the target application writes to stdout and stderr (ex: Console.WriteLine) will be saved to the specified file. This option is ignored if console is set to something other than internalConsole.","default":"${workspaceFolder}/out.txt"}}},"attach":{"type":"object","required":[],"properties":{"processName":{"type":"string","description":"","default":"The process name to attach to. If this is used, 'processId' should not be used."},"processId":{"anyOf":[{"type":"string","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":"${command:pickProcess}"},{"type":"integer","description":"The process id to attach to. Use \"${command:pickProcesss}\" to get a list of running processes to attach to. If 'processId' used, 'processName' should not be used.","default":0}]},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"C:\\foo\":\"/home/user/foo\" }'","additionalProperties":{"type":"string"},"default":{"<insert-source-path-here>":"<insert-target-path-here>"}},"justMyCode":{"type":"boolean","description":"Optional flag to only show user code.","default":true},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"enableStepFiltering":{"type":"boolean","description":"Optional flag to enable stepping over Properties and Operators.","default":true},"logging":{"description":"Optional flags to determine what types of messages should be logged to the output window.","type":"object","required":[],"default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the output window.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the output window.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the output window when not using an external console.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic engine logs should be logged to the output window.","default":false},"browserStdOut":{"type":"boolean","description":"Optional flag to determine if stdout text from the launching the web browser should be logged to the output window.","default":true},"elapsedTiming":{"type":"boolean","description":"If true, engine logging will include `adapterElapsedTime` and `engineElapsedTime` properties to indicate the amount of time, in microseconds, that a request took.","default":false},"threadExit":{"type":"boolean","description":"Controls if a message is logged when a thread in the target process exits. Default: `false`.","default":false},"processExit":{"type":"boolean","description":"Controls if a message is logged when the target process exits, or debugging is stopped. Default: `true`.","default":true}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the .NET Core debugger backend executable (vsdbg).","type":"object","required":["debuggerPath"],"default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine.","default":"enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"windows":{"description":"Windows-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example 'c:\\tools\\plink.exe'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"osx":{"description":"OSX-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"linux":{"description":"Linux-specific pipe launch configuration options","default":{"pipeCwd":"${workspaceFolder}","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[]},"type":"object","properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"${workspaceFolder}"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"anyOf":[{"type":"array","description":"Command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","items":{"type":"string"},"default":[]},{"type":"string","description":"Stringified version of command line arguments passed to the pipe program. Token ${debuggerCommand} in pipeArgs will get replaced by the full debugger command, this token can be specified inline with other arguments. If ${debuggerCommand} isn't used in any argument, the full debugger command will be instead be added to the end of the argument list.","default":""}],"default":[]},"quoteArgs":{"type":"boolean","description":"Should arguments that contain characters that need to be quoted (example: spaces) be quoted? Defaults to 'true'. If set to false, the debugger command will no longer be automatically quoted.","default":true},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}}}},"suppressJITOptimizations":{"type":"boolean","description":"If true, when an optimized module (.dll compiled in the Release configuration) loads in the target process, the debugger will ask the Just-In-Time compiler to generate code with optimizations disabled. For more information: https://aka.ms/VSCode-CS-LaunchJson#suppress-jit-optimizations","default":false},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false,"searchNuGetOrgSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"searchNuGetOrgSymbolServer":{"type":"boolean","description":"If 'true' the NuGet.org symbol server (https​://symbols.nuget.org​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache, and on Linux and macOS the debugger will default to ~/.dotnet/symbolcache.","default":"~/.dotnet/symbolcache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}},"sourceLinkOptions":{"description":"Options to control how Source Link connects to web servers. For more information: https://aka.ms/VSCode-CS-LaunchJson#source-link-options","default":{"*":{"enabled":true}},"type":"object","additionalItems":{"type":"object","properties":{"enabled":{"title":"boolean","description":"Is Source Link enabled for this URL?  If unspecified, this option defaults to 'true'.","default":"true"}}}},"allowFastEvaluate":{"type":"boolean","description":"When true (the default state), the debugger will attempt faster evaluation by simulating execution of simple properties and methods.","default":true}}}}}],"languages":[{"id":"aspnetcorerazor","extensions":[".cshtml",".razor"],"mimetypes":["text/x-cshtml"],"configuration":"./src/razor/language-configuration.json"}],"grammars":[{"language":"aspnetcorerazor","scopeName":"text.aspnetcorerazor","path":"./src/razor/syntaxes/aspnetcorerazor.tmLanguage.json"}],"menus":{"editor/title":[{"command":"extension.showRazorCSharpWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"extension.showRazorHtmlWindow","when":"resourceLangId == aspnetcorerazor"},{"command":"razor.reportIssue","when":"resourceLangId == aspnetcorerazor"}]}},"uuid":"d0bfc4ab-1d3a-4487-8782-7cf6027b4fff","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-dotnettools.csharp","identifier":{"value":"ms-dotnettools.csharp","_lower":"ms-dotnettools.csharp"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/ms-dotnettools.csharp-1.21.13","path":"/home/rule/.vscode/extensions/ms-dotnettools.csharp-1.21.13","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"0.27.0-insiders2","publisher":"ms-vscode","preview":true,"icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.30.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"activationEvents":["*"],"main":"./dist/main","contributes":{"viewsContainers":{"activitybar":[{"id":"CppRenameActivityBar","title":"C/C++ Rename","icon":"assets/cpp-rename-icon.svg"}]},"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cppReferenceTypes:hasResults && reference-list.hasResult"}],"CppRenameActivityBar":[{"id":"CppRenamePendingView","name":"PENDING RENAME","when":"cppRename:hasResults"},{"id":"CppRenameCandidatesView","name":"CANDIDATES FOR RENAME","when":"cppRename:hasResults"}]},"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["relative","${workspaceFolder}"],"pattern":{"regexp":"^(.*):(\\d+):(\\d+):\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":["string","null"],"default":null,"description":"The full path of the clang-format executable. If not specified, and clang-format is available in the environment path, that is used.  If not found in the environment path, a copy of clang-format bundled with the extension will be used.","scope":"resource"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4 }","scope":"resource"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":["string","null"],"default":null,"description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":["string","null"],"default":null,"description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.formatting":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"\"Default\" enables code formatting. \"Disabled\" disables code formatting.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked","scope":"window"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"resource"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"resource"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","default":null,"description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" on Linux (or \"~/.cache/vscode-cpptools/\" if XDG_CACHE_HOME is not defined), and \"~/Library/Caches/vscode-cpptools/\" on Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"resource"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"resource","minimum":0},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified, or the values to insert if \"${default}\" is present in \"includePath\".","scope":"resource"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"resource"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"resource"},"C_Cpp.default.windowsSdkVersion":{"type":["string","null"],"default":null,"description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1$","scope":"resource"},"C_Cpp.default.compileCommands":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"resource"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"resource"},"C_Cpp.default.intelliSenseMode":{"type":["string","null"],"enum":["msvc-x64","gcc-x64","clang-x64","msvc-x86","gcc-x86","clang-x86"],"default":null,"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerArgs":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in configuration if \"compilerArgs\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cStandard":{"type":["string","null"],"enum":["c89","c99","c11"],"default":null,"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.cppStandard":{"type":["string","null"],"enum":["c++98","c++03","c++11","c++14","c++17","c++20"],"default":null,"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.configurationProvider":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"resource"},"C_Cpp.default.browse.databaseFilename":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"resource"},"C_Cpp.default.enableConfigurationSquiggles":{"type":["boolean","null"],"default":null,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"window"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"description":"If true, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"CppRenameView.remove","category":"C/C++","title":"Remove Reference","icon":{"light":"assets/minus-light.svg","dark":"assets/minus-dark.svg"}},{"command":"CppRenameView.add","category":"C/C++","title":"Add Reference","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.removeAll","category":"C/C++","title":"Remove All References","icon":{"light":"assets/minus-light.svg","dark":"assets/minus-dark.svg"}},{"command":"CppRenameView.addAll","category":"C/C++","title":"Add All References","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.removeFile","category":"C/C++","title":"Remove References in File","icon":{"light":"assets/minus-light.svg","dark":"assets/minus-dark.svg"}},{"command":"CppRenameView.addFile","category":"C/C++","title":"Add References in File","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.addReferenceType","category":"C/C++","title":"Add References of Type","icon":{"light":"assets/plus-light.svg","dark":"assets/plus-dark.svg"}},{"command":"CppRenameView.cancel","category":"C/C++","title":"Cancel Rename","icon":{"light":"assets/cancel-light.svg","dark":"assets/cancel-dark.svg"}},{"command":"CppRenameView.done","category":"C/C++","title":"Commit Rename","icon":{"light":"assets/check-light.svg","dark":"assets/check-dark.svg"}},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'cpp'"},{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorTextFocus && editorLangId == 'c'"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to debug server to launch. Defaults to null.","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"squid\", \"value\": \"clam\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true}}}}}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"cuda"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppRenameCandidatesView && refView.isGroupedByFile","group":"navigation@1"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppRenameCandidatesView && !refView.isGroupedByFile","group":"navigation@1"},{"command":"CppRenameView.removeAll","when":"view == CppRenamePendingView && cppRename:hasResults","group":"navigation@1"},{"command":"CppRenameView.done","when":"view == CppRenamePendingView && cppRename:hasResults","group":"navigation@2"},{"command":"CppRenameView.cancel","when":"view == CppRenamePendingView && cppRename:hasResults","group":"navigation@3"},{"command":"CppRenameView.addAll","when":"view == CppRenameCandidatesView && cppRename:hasResults","group":"navigation@2"}],"view/item/context":[{"command":"CppRenameView.remove","when":"view == CppRenamePendingView && viewItem == pendingItem","group":"inline"},{"command":"CppRenameView.add","when":"view == CppRenameCandidatesView && viewItem == candidateItem","group":"inline"},{"command":"CppRenameView.removeFile","when":"view == CppRenamePendingView && viewItem == pendingFile","group":"inline"},{"command":"CppRenameView.addFile","when":"view == CppRenameCandidatesView && viewItem == candidateFile","group":"inline"},{"command":"CppRenameView.addReferenceType","when":"view == CppRenameCandidatesView && viewItem == candidateReferenceType","group":"inline"}],"editor/context":[{"when":"editorLangId == c","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == cpp","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == c","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == cpp","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == c","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == cpp","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"},{"when":"editorLangId == c","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}],"commandPalette":[{"command":"CppRenameView.remove","when":"never"},{"command":"CppRenameView.add","when":"never"},{"command":"CppRenameView.removeAll","when":"cppRename:hasResults"},{"command":"CppRenameView.addAll","when":"cppRename:hasResults"},{"command":"CppRenameView.removeFile","when":"never"},{"command":"CppRenameView.addFile","when":"never"},{"command":"CppRenameView.addReferenceType","when":"never"},{"command":"CppRenameView.cancel","when":"cppRename:hasResults"},{"command":"CppRenameView.done","when":"cppRename:hasResults"},{"command":"C_Cpp.referencesViewGroupByType","when":"cppRename:hasResults || cppReferenceTypes:hasResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cppRename:hasResults || cppReferenceTypes:hasResults"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace"},"[c]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace"},"[Log]":{"editor.wordWrap":"off"}}},"scripts":{"vscode:prepublish":"yarn run compile","compile":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --vscode-nls","compile-dev":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development","compile-watch":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --vscode-nls --watch --info-verbosity verbose","compile-dev-watch":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development --watch --info-verbosity verbose","generateOptionsSchema":"node ./tools/prepublish.js && node ./out/tools/generateOptionsSchema.js","generate-native-strings":"node ./tools/prepublish.js && gulp generate-native-strings","translations-export":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-export","translations-generate":"node ./tools/prepublish.js && gulp translations-generate","translations-import":"node ./tools/prepublish.js && gulp translations-import","prepublishjs":"node ./tools/prepublish.js","pretest":"node ./tools/prepublish.js && tsc -p test.tsconfig.json","pr-check":"node ./tools/prepublish.js && gulp pr-check","lint":"node ./tools/prepublish.js && gulp lint","unitTests":"node ./tools/prepublish.js && gulp unitTests","import-edge-strings":"node ./import_edge_strings.js"},"devDependencies":{"@octokit/rest":"^16.28.9","@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^5.2.7","@types/node":"^12.7.2","@types/plist":"^3.0.2","@types/tmp":"^0.1.0","@types/webpack":"^4.39.0","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^2.19.2","@typescript-eslint/eslint-plugin-tslint":"^2.19.2","@typescript-eslint/parser":"^2.19.2","async-child-process":"^1.1.1","await-notify":"^1.0.1","escape-string-regexp":"^2.0.0","eslint":"^6.8.0","eslint-plugin-import":"^2.20.1","eslint-plugin-jsdoc":"^21.0.0","event-stream":"^4.0.1","fs-extra":"^8.1.0","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^7.0.1","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.1","http-proxy-agent":"^2.1.0","https-proxy-agent":"^2.2.4","jsonc-parser":"^2.1.1","minimatch":"^3.0.4","minimist":"^1.2.0","mkdirp":"^0.5.1","parse5":"^5.1.0","parse5-traverse":"^1.0.3","plist":"^3.0.1","tmp":"^0.1.0","ts-loader":"^6.0.4","tslint":"^5.19.0","typescript":"^3.5.3","vscode":"^1.1.36","vscode-cpptools":"^3.1.0","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-extension-telemetry":"^0.1.2","vscode-languageclient":"^5.2.1","vscode-nls":"^4.1.1","vscode-nls-dev":"^3.2.6","webpack":"^4.39.2","webpack-cli":"^3.3.7","which":"^2.0.2","xml2js":"^0.4.19","yauzl":"^2.10.0"},"resolutions":{"https-proxy-agent":"^2.2.4"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2116522","platforms":["linux"],"architectures":["x86_64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"]},{"description":"C/C++ language components (Linux / x86)","url":"https://go.microsoft.com/fwlink/?linkid=2116454","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./bin/cpptools","./bin/cpptools-srv"]},{"description":"C/C++ language components (OS X)","url":"https://go.microsoft.com/fwlink/?linkid=2116453","platforms":["darwin"],"binaries":["./bin/cpptools","./bin/cpptools-srv"]},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2116521","platforms":["win32"],"binaries":[]},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2117044","platforms":["linux"],"architectures":["x86_64"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkID=2117145","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./LLVM/bin/clang-format"]},{"description":"ClangFormat (OS X)","url":"https://go.microsoft.com/fwlink/?LinkID=2117146","platforms":["darwin"],"binaries":["./LLVM/bin/clang-format.darwin"]},{"description":"ClangFormat (Windows)","url":"https://go.microsoft.com/fwlink/?LinkID=2117043","platforms":["win32"],"binaries":[]},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[]},{"description":"Mono Runtime (Linux / x86)","url":"https://go.microsoft.com/fwlink/?LinkId=2027410","platforms":["linux"],"architectures":["x86","i686","i386"],"binaries":["./debugAdapters/mono.linux-x86"]},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x86_64"],"binaries":["./debugAdapters/mono.linux-x86_64"]},{"description":"Mono Runtime (OS X)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"]},{"description":"LLDB-MI (macOS Mojave and higher)","url":"https://go.microsoft.com/fwlink/?linkid=2116759","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":false,"binaries":["./debugAdapters/lldb-mi/bin/lldb-mi"]},{"description":"LLDB 3.8.0 (macOS High Sierra and lower)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":true,"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"]},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2082216","platforms":["win32"],"binaries":[]}],"uuid":"690b692e-e8a9-493f-b802-8089d50ac1b2","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/ms-vscode.cpptools-0.27.0-insiders2","path":"/home/rule/.vscode/extensions/ms-vscode.cpptools-0.27.0-insiders2","scheme":"file"}},{"name":"vscode-versionlens","private":true,"description":"Shows the latest version for each package using code lens","repository":{"type":"git","url":"https://github.com/vscode-contrib/vscode-versionlens.git"},"author":"Peter Flannery","license":"MIT","version":"0.25.0","publisher":"pflannery","displayName":"Version Lens","icon":"images/logo.png","engines":{"vscode":"^1.23.0"},"keywords":["versions","packages","dependencies","references","npm, dub, dotnet, nuget, jspm, csharp, fsharp, c#, f#, java, maven, pub, dart, composer"],"categories":["Programming Languages","Other"],"activationEvents":["onLanguage:json","onLanguage:xml","onLanguage:yaml"],"main":"./out/extension-bundle.js","scripts":{"teardown":"npm run -s clean && rimraf ./node_modules","vscode:prepublish":"npm run -s compile","watch":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","clean":"rimraf ./out","precompile":"npm run -s clean && jshint ./src","precompile:test":"npm run -s precompile","compile":"tsc -p ./src/bundle.json","compile:test":"tsc -p ./test/bundle.test.json","pretest":"npm run -s compile:test","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^7.0.2","@types/node":"^10.14.5","jshint":"2.11.0","mocha-ui-esm":"1.0.0-alpha.4","mock-require":"3.0.3","rimraf":"3.0.2","typescript":"3.5.2","vscode":"1.1.36"},"dependencies":{"systemjs":"~0.21.6","npm":"6.5.0","npm-package-arg":"6.1.0","minimatch":"3.0.4","opener":"1.5.1","request-light":"0.3.0","semver":"7.1.3","vscode-contrib-jsonc":"1.0.0-beta.2","vscode-languageclient":"6.1.1","xmldoc":"1.1.2","yaml":"1.7.2"},"contributes":{"commands":[{"command":"versionlens.showDependencyStatuses","title":"Show dependency statuses","category":"VersionLens","icon":{"dark":"images/icons/dep-status-dark.svg","light":"images/icons/dep-status-light.svg"}},{"command":"versionlens.hideDependencyStatuses","title":"Hide dependency statuses","category":"VersionLens","icon":{"dark":"images/icons/dep-status-active.svg","light":"images/icons/dep-status-active.svg"}},{"command":"versionlens.showTaggedVersions","title":"Show tagged dependency versions","category":"VersionLens","icon":{"dark":"images/icons/tag-dark.svg","light":"images/icons/tag-light.svg"}},{"command":"versionlens.hideTaggedVersions","title":"Hide tagged dependency versions","category":"VersionLens","icon":{"dark":"images/icons/tag-active.svg","light":"images/icons/tag-active.svg"}},{"command":"versionlens.showVersionLenses","title":"Show dependency versions","category":"VersionLens","icon":{"dark":"images/icons/toggle-dark.svg","light":"images/icons/toggle-light.svg"}},{"command":"versionlens.hideVersionLenses","title":"Hide dependency versions","category":"VersionLens","icon":{"dark":"images/icons/toggle-active.svg","light":"images/icons/toggle-active.svg"}},{"command":"versionlens.showingProgress","title":"Analyzing dependencies...","category":"VersionLens","icon":{"dark":"images/icons/toggle-active-progress.svg","light":"images/icons/toggle-active-progress.svg"}}],"menus":{"commandPalette":[{"command":"versionlens.showingProgress","when":"false"},{"command":"versionlens.showDependencyStatuses","when":"versionlens.show && versionlens.isActive"},{"command":"versionlens.hideDependencyStatuses","when":"versionlens.show && versionlens.isActive"},{"command":"versionlens.showTaggedVersions","when":"versionlens.show && versionlens.isActive"},{"command":"versionlens.hideTaggedVersions","when":"versionlens.show && versionlens.isActive"},{"command":"versionlens.showVersionLenses","when":"versionlens.show && versionlens.isActive"},{"command":"versionlens.hideVersionLenses","when":"versionlens.show && versionlens.isActive"}],"editor/title":[{"command":"versionlens.showDependencyStatuses","when":"versionlens.showDependencyStatuses == false && versionlens.show && versionlens.isActive && textCompareEditorVisible == false","group":"navigation@3"},{"command":"versionlens.hideDependencyStatuses","when":"versionlens.showDependencyStatuses && versionlens.show && versionlens.isActive && textCompareEditorVisible == false","group":"navigation@3"},{"command":"versionlens.showTaggedVersions","when":"versionlens.showTaggedVersions == false && versionlens.show && versionlens.isActive && textCompareEditorVisible == false","group":"navigation@2"},{"command":"versionlens.hideTaggedVersions","when":"versionlens.showTaggedVersions && versionlens.show && versionlens.isActive && textCompareEditorVisible == false","group":"navigation@2"},{"command":"versionlens.showVersionLenses","when":"versionlens.show == false && versionlens.isActive && versionlens.inProgress == false && textCompareEditorVisible == false","group":"navigation@1"},{"command":"versionlens.hideVersionLenses","when":"versionlens.show && versionlens.isActive && versionlens.inProgress == false && textCompareEditorVisible == false","group":"navigation@1"},{"command":"versionlens.showingProgress","when":"versionlens.show && versionlens.isActive && versionlens.inProgress && textCompareEditorVisible == false","group":"navigation@1"}]},"configuration":{"title":"Versionlens configuration","properties":{"versionlens.versionPrefix":{"type":"string","default":"","description":"Inserts this prefix before the version when clicking on the code lens link."},"versionlens.showVersionLensesAtStartup":{"type":"boolean","default":true,"description":"Show dependency versions by default. You can use the editor toolbar to show/hide versions at any time."},"versionlens.showTaggedVersionsAtStartup":{"type":"boolean","default":false,"description":"Show dist tags by default when vscode starts. You can use the editor toolbar to show/hide dist tags at any time."},"versionlens.showDependencyStatusesAtStartup":{"type":"boolean","default":false,"description":"Show dependency statuses default when vscode starts. You can use the editor toolbar to show/hide dependency statuses at any time."},"versionlens.npm.dependencyProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":1,"default":["dependencies","devDependencies","peerDependencies","optionalDependencies"],"description":"Defines which properties in package.json should be parsed by this extension"},"versionlens.npm.distTagFilter":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":0,"default":[],"description":"Define which common dist tags you want to see. i.e. [alpha, beta]. If you don't specify any dist tags then all the dist-tags for a package will be shown."},"versionlens.pub.dependencyProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":1,"default":["dependencies","dev_dependencies"],"description":"Defines which properties in pubspec.yaml should be parsed by this extension"},"versionlens.dotnet.dependencyProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":1,"default":["PackageReference","DotNetCliToolReference"],"description":"Defines which properties in project.json should be parsed by this extension"},"versionlens.dotnet.tagFilter":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":0,"default":[],"description":"Define which common tagged versions you want to see. i.e. [alpha, beta]. If you don't specify any dist tags then all the dist-tags for a package will be shown."},"versionlens.dotnet.nugetFeeds":{"type":"array","items":{"type":"string"},"default":["https://api-v2v3search-0.nuget.org/autocomplete"],"description":"Defines which NuGet feeds to use for package search. Has to be 'SearchAutocompleteService' endpoint, which can be found by navigating to feed index (e.g. https://api.nuget.org/v3/index.json) and looking for Url with that type."},"versionlens.dotnet.includePrerelease":{"type":"boolean","default":true,"description":"Include NuGet pre-release packages"},"versionlens.dub.dependencyProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":1,"default":["dependencies","versions"],"description":"Defines which properties in dub.json should be parsed by this extension"},"versionlens.composer.dependencyProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":1,"default":["require","require-dev"],"description":"Defines which properties in composer.json should be parsed by this extension"},"versionlens.github.taggedCommits":{"type":"array","items":{"type":"string","enum":["Release","Tag"]},"uniqueItems":true,"minItems":1,"maxItems":2,"default":["Release","Tag"],"description":"Defines what tags to include when comparing github package versions."},"versionlens.github.accessToken":{"type":"string","default":"","description":"Used for making basic read only github api requests. To generate a token see https://help.github.com/articles/creating-an-access-token-for-command-line-use/#creating-a-token. When no token is provided then access to the github api is rate limited to 60 requests every 10 minutes or so."},"versionlens.maven.dependencyProperties":{"type":"array","items":{"type":"string"},"uniqueItems":true,"minItems":1,"default":["dependency","parent"],"description":"Defines which properties in pom.xml should be parsed by this extension"},"versionlens.missingDependencyColour":{"type":"string","default":"red","description":"The colour used to show missing dependencies. Accept's valid CSS colours"},"versionlens.installedDependencyColour":{"type":"string","default":"green","description":"The colour used to show installed dependencies. Accept's valid CSS colours"},"versionlens.outdatedDependencyColour":{"type":"string","default":"orange","description":"The colour used to show outdated dependencies. Accept's valid CSS colours"},"versionlens.prereleaseDependencyColour":{"type":"string","default":"yellowgreen","description":"The colour used to show prerelease dependencies. Accept's valid CSS colours"}}}},"uuid":"07fc4a0a-11fc-4121-ba9a-f0d534c729d8","isBuiltin":false,"isUnderDevelopment":false,"id":"pflannery.vscode-versionlens","identifier":{"value":"pflannery.vscode-versionlens","_lower":"pflannery.vscode-versionlens"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/pflannery.vscode-versionlens-0.25.0","path":"/home/rule/.vscode/extensions/pflannery.vscode-versionlens-0.25.0","scheme":"file"}},{"name":"quicktype","displayName":"Paste JSON as Code","description":"Copy JSON, paste as Go, TypeScript, C#, C++ and more.","version":"12.0.46","publisher":"quicktype","icon":"media/icon.png","galleryBanner":{"color":"#00212b","theme":"dark"},"homepage":"https://quicktype.io","author":{"name":"quicktype.io","email":"hello@quicktype.io"},"bugs":{"url":"https://github.com/quicktype/quicktype/issues"},"repository":{"type":"git","url":"https://github.com/quicktype/quicktype"},"engines":{"vscode":"^1.22.0"},"categories":["Other"],"keywords":["json","converter"],"markdown":"github","activationEvents":["onCommand:quicktype.pasteJSONAsTypes","onCommand:quicktype.pasteJSONAsTypesAndSerialization","onCommand:quicktype.pasteJSONSchemaAsTypes","onCommand:quicktype.pasteJSONSchemaAsTypesAndSerialization","onCommand:quicktype.pasteTypeScriptAsTypesAndSerialization","onCommand:quicktype.openForJSON","onCommand:quicktype.openForJSONSchema","onCommand:quicktype.openForTypeScript"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"quicktype","properties":{"quicktype.justTypes":{"type":"boolean","default":true,"description":"Produce just types, or (de-)serialization code as well?"},"quicktype.inferMaps":{"type":"boolean","default":true,"description":"Infer maps when object keys look like map keys."},"quicktype.inferEnums":{"type":"boolean","default":true,"description":"Infer enums when there aren't many different string values."},"quicktype.inferDateTimes":{"type":"boolean","default":true,"description":"Use date-time types for strings that look like date-times."},"quicktype.inferUuids":{"type":"boolean","default":true,"description":"Use UUID types for strings that look like UUIDs."},"quicktype.inferIntegerStrings":{"type":"boolean","default":true,"description":"Convert stringified integers into integers, and back."},"quicktype.inferBooleanStrings":{"type":"boolean","default":true,"description":"Convert stringified booleans into booleans, and back."}}},"commands":[{"command":"quicktype.pasteJSONAsTypes","title":"Paste JSON as Types"},{"command":"quicktype.pasteJSONAsTypesAndSerialization","title":"Paste JSON as Code"},{"command":"quicktype.pasteJSONSchemaAsTypes","title":"Paste JSON Schema as Types"},{"command":"quicktype.pasteJSONSchemaAsTypesAndSerialization","title":"Paste JSON Schema as Code"},{"command":"quicktype.pasteTypeScriptAsTypesAndSerialization","title":"Paste TypeScript as Code"},{"command":"quicktype.openForJSON","title":"Open quicktype for JSON"},{"command":"quicktype.openForJSONSchema","title":"Open quicktype for JSON Schema"},{"command":"quicktype.openForTypeScript","title":"Open quicktype for TypeScript"},{"command":"quicktype.changeTargetLanguage","title":"Set quicktype target language"}],"keybindings":[{"command":"quicktype.pasteJSONAsTypesAndSerialization","key":"ctrl+shift+V","mac":"cmd+shift+V","when":"editorTextFocus"},{"command":"quicktype.pasteJSONAsTypes","key":"ctrl+shift+alt+V","mac":"cmd+shift+alt+V","when":"editorTextFocus"}]},"scripts":{"publish":"vsce publish -p $VSCE_TOKEN","vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/clipboardy":"^1.1.0","@types/node":"^8.10.29","@types/node-persist":"0.0.33","@types/universal-analytics":"^0.4.2","@types/urijs":"github:quicktype/types-urijs","@types/uuid":"^3.4.4","typescript":"^3.0.3","vsce":"^1.49.2","vscode":"^1.1.21"},"dependencies":{"clipboardy":"^1.2.3","node-persist":"^3.0.1","quicktype-core":"^5.0.46","quicktype-typescript-input":"^0.0.9","unicode-properties":"github:quicktype/unicode-properties#dist","universal-analytics":"^0.4.17","uuid":"^3.3.2"},"uuid":"e05d98bf-3735-4c1e-9fae-86ef0a52e19f","isBuiltin":false,"isUnderDevelopment":false,"id":"quicktype.quicktype","identifier":{"value":"quicktype.quicktype","_lower":"quicktype.quicktype"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/quicktype.quicktype-12.0.46","path":"/home/rule/.vscode/extensions/quicktype.quicktype-12.0.46","scheme":"file"}},{"name":"aspnet-helper","displayName":"ASP.NET Helper","description":"\"Little helper to develop faster ASP.NET MVC apps\"","version":"0.6.4","publisher":"schneiderpat","keywords":["C#","csharp","Razor","Snippets"],"galleryBanner":{"color":"#2c2c2c","theme":"dark"},"icon":"images/icon.png","repository":{"type":"git","url":"https://github.com/schneiderpat/aspnet-helper"},"bugs":{"url":"https://github.com/schneiderpat/aspnet-helper/issues"},"license":"MIT","engines":{"vscode":"^1.18.0"},"categories":["Other","Snippets"],"activationEvents":["*"],"main":"./out/src/extension","contributes":{"configuration":{"type":"object","title":"Server configuration","properties":{"razorServer.maxNumberOfProblems":{"type":"number","default":20,"description":"Maximum number of problems produced by the server."},"razorServer.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the languageServerExample service."}}},"snippets":[{"language":"razor","path":"./snippets/razor.json"}]},"scripts":{"vscode:prepublish":"cd ../aspnet-helper-server && npm run compile && cd ../aspnet-helper && tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.5.3","vscode":"^1.1.6","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32","@types/glob":"^5.0.30"},"dependencies":{"glob":"^7.1.1","vscode-languageclient":"^3.4.5"},"uuid":"f7d921d1-e720-42be-b9ed-77f01afb05d7","isBuiltin":false,"isUnderDevelopment":false,"id":"schneiderpat.aspnet-helper","identifier":{"value":"schneiderpat.aspnet-helper","_lower":"schneiderpat.aspnet-helper"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/schneiderpat.aspnet-helper-0.6.4","path":"/home/rule/.vscode/extensions/schneiderpat.aspnet-helper-0.6.4","scheme":"file"}},{"name":"msbuild-project-tools","displayName":"MSBuild project tools","description":"Tools for working with MSBuild project files (such as auto-complete for package Ids / versions).","version":"0.3.3","settingsSchemaVersion":1,"publisher":"tintoy","license":"MIT","repository":{"type":"git","url":"https://github.com/tintoy/msbuild-project-tools-vscode.git"},"icon":"images/icon.png","engines":{"vscode":"^1.19.0"},"categories":["Programming Languages","Other"],"keywords":["msbuild","dotnet","nuget","packagereference","C#"],"activationEvents":["workspaceContains:NuGet.config","workspaceContains:global.json","workspaceContains:**/*.*proj","workspaceContains:**/*.props","workspaceContains:**/*.targets","onLanguage:msbuild","onLanguage:xml"],"main":"./out/src/extension/extension","contributes":{"commands":[{"command":"msbuildProjectTools.toggleNuGetPreRelease","title":"Toggle pre-prelease","category":"NuGet"}],"configuration":{"title":"MSBuild project tools","type":"object","properties":{"msbuildProjectTools.logging.level":{"title":"Language service logging level.","type":"string","enum":["Error","Warning","Information","Debug","Verbose"],"default":"Information","description":"The logging level for the MSBuild language service."},"msbuildProjectTools.logging.file":{"title":"Language service log file.","type":"string","default":null,"description":"If specified, the language service will log to this file."},"msbuildProjectTools.logging.seq.level":{"type":"string","enum":["Error","Warning","Information","Debug","Verbose"],"default":"Verbose","description":"The minimum log level for Seq."},"msbuildProjectTools.logging.seq.url":{"type":"string","default":null,"description":"The URL of the Seq server (Seq logging will be enabled if this is specified)."},"msbuildProjectTools.logging.seq.apiKey":{"type":"string","default":null,"description":"The API key (if any) to use when authenticating to Seq."},"msbuildProjectTools.logging.trace":{"type":"boolean","default":false,"description":"Trace all communication between VSCode and the MSBuild language service?"},"msbuildProjectTools.language.useClassicProvider":{"title":"Use classic completion provider","type":"boolean","default":false,"description":"Use the classic completion provider for PackageReferences, instead of the full language service?"},"msbuildProjectTools.language.disable.hover":{"title":"Disable tooltips on hover?","type":"boolean","default":false,"description":"Disable tooltips when hovering on XML in MSBuild project files?"},"msbuildProjectTools.language.completionsFromProject":{"title":"Include completions the current project.","type":"array","items":{"type":"string","enum":["ItemType","ItemMetadata","Property","Target","Task"]},"default":["ItemType","ItemMetadata","Property"],"description":"Types of objects defined in the current project to include when offering completions."},"msbuildProjectTools.msbuild.extensionsPath":{"type":"string","default":null,"description":"Override the MSBuildExtensionsPath property."},"msbuildProjectTools.msbuild.extensionsPath32":{"type":"string","default":null,"description":"Override the MSBuildExtensionsPath32 property."},"msbuildProjectTools.experimentalFeatures":{"type":"array","items":{"type":"string","enum":["empty-completion-lists"]},"default":[],"description":"The names of experimental features (if any) to enable. If you're not sure what this is, you probably don't need it."},"msbuildProjectTools.nuget.newestVersionsFirst":{"type":"boolean","default":true,"description":"Sort package versions in descending order (i.e. newest versions first)? Set this to false to revert to the old behaviour (VSCode decides how to sort the completion list)."},"msbuildProjectTools.nuget.includePreRelease":{"type":"boolean","default":false,"description":"Include suggestions for pre-release packages and package versions."},"msbuildProjectTools.nuget.includeLocalSources":{"type":"boolean","default":false,"description":"Include suggestions for packages from local (file-based) package sources. You'll need to close and reopen your project file for this setting to take effect."},"msbuildProjectTools.nuget.disablePreFetch":{"type":"boolean","default":false,"description":"Don't automatically initialise the NuGet API client when opening a project (this is done to make the first PackageReference completion faster)?"}}},"snippets":[{"language":"msbuild","path":"./snippets/msbuild-project.json"}],"grammars":[{"scopeName":"text.xml.msbuild.expression","injectTo":["text.xml.msbuild"],"path":"./syntaxes/msbuild.expression.json"},{"language":"msbuild","scopeName":"text.xml.msbuild","path":"./syntaxes/msbuild.json"}],"languages":[{"id":"msbuild","aliases":["MSBuild"],"extensions":["csproj","props","targets","msbuild"],"configuration":"./language-configuration.json"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/chai":"^4.2.4","@types/mocha":"^5.2.7","@types/mz":"0.0.31","@types/node":"^6.0.40","@types/object-path":"^0.9.29","@types/semver":"^5.3.34","@types/vscode":"^1.39.0","@types/which":"^1.0.28","@types/xmldom":"^0.1.29","chai":"^4.2.0","mocha":"^6.2.2","tslint":"^5.20.0","typescript":"^3.6.4"},"dependencies":{"axios":"^0.16.2","mz":"^2.6.0","object-path":"^0.11.4","rxjs":"^5.4.2","semver":"^5.4.1","vscode-languageclient":"^5.2.1","which":"^1.3.0","xmldom":"^0.1.27"},"uuid":"95c0933d-48c1-447b-b4d9-acee3e8da188","isBuiltin":false,"isUnderDevelopment":false,"id":"tintoy.msbuild-project-tools","identifier":{"value":"tintoy.msbuild-project-tools","_lower":"tintoy.msbuild-project-tools"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/tintoy.msbuild-project-tools-0.3.3","path":"/home/rule/.vscode/extensions/tintoy.msbuild-project-tools-0.3.3","scheme":"file"}},{"name":"vscode-todo-highlight","displayName":"TODO Highlight","description":"highlight TODOs, FIXMEs, and any keywords, annotations...","keywords":["todo","fixme","highlight","keyword","annotation"],"version":"1.0.4","publisher":"wayou","license":"MIT","icon":"assets/icon.png","homepage":"https://github.com/wayou/vscode-todo-highlight","repository":{"type":"git","url":"https://github.com/wayou/vscode-todo-highlight.git"},"bugs":{"url":"https://github.com/wayou/vscode-todo-highlight/issues","email":"liuwayong@gmail.com"},"galleryBanner":{"color":"#272729","theme":"dark"},"engines":{"vscode":"^1.5.0"},"categories":["Other"],"activationEvents":["*"],"main":"./src/extension","scripts":{"postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"badges":[{"url":"https://img.shields.io/badge/License-MIT-brightgreen.svg","href":"https://opensource.org/licenses/MIT","description":"License: MIT"},{"url":"https://travis-ci.org/wayou/vscode-todo-highlight.svg?branch=master","href":"https://travis-ci.org/wayou/vscode-todo-highlight","description":"Build Status"},{"url":"https://vsmarketplacebadge.apphb.com/version-short/wayou.vscode-todo-highlight.svg","href":"https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight","description":"Version"},{"url":"https://vsmarketplacebadge.apphb.com/installs-short/wayou.vscode-todo-highlight.svg","href":"https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight","description":"Installs"},{"url":"https://vsmarketplacebadge.apphb.com/rating-short/wayou.vscode-todo-highlight.svg","href":"https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight","description":"Ratings"}],"contributes":{"commands":[{"title":"Toggle highlight","category":"TODO-Highlight","command":"todohighlight.toggleHighlight"},{"title":"List highlighted annotations","category":"TODO-Highlight","command":"todohighlight.listAnnotations"}],"configuration":{"type":"object","title":"TODO Highlight","properties":{"todohighlight.isEnable":{"type":"boolean","default":true,"description":"Enable or disable the highlight"},"todohighlight.isCaseSensitive":{"type":"boolean","default":true,"description":"Specify whether the keywords are case sensitive or not"},"todohighlight.toggleURI":{"type":"boolean","default":false,"description":"If the file path within the output channel not clickable, set this to true to toggle the path patten between `<path>#<line>` and `<path>:<line>:<column>`"},"todohighlight.keywords":{"type":"array","description":"Customize keywords and colors. Any css color identifier is valid.","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"text":{"type":"string","description":"Custom text to be highlighted"},"color":{"type":"string","description":"The text color. Besides, you can play with all the string and boolean styling properties provied by VS Code API. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"},"backgroundColor":{"type":"string","description":"The text background color. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"},"overviewRulerColor":{"type":"string","description":"The color of the ruler mark on the scroll bar. Use rgba() and define transparent colors to play well with other decorations. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"}}}]}},"todohighlight.keywordsPattern":{"type":"string","default":"","description":"Specify keywords via RegExp instead of `todohighlight.keywords` one by one. NOTE that if this presents, `todohighlight.keywords` will be ignored. And REMEMBER to escapse the back slash if there's any in your regexp (using \\\\ instead of single back slash)"},"todohighlight.defaultStyle":{"type":"object","description":"Default style for all customized keywords","properties":{"color":{"type":"string","description":"The text color. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"},"backgroundColor":{"type":"string","description":"The text background color. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"},"overviewRulerColor":{"type":"string","description":"The color of the ruler mark on the scroll bar. See all available properties on VSCode doc DecorationRenderOptions section: https://code.visualstudio.com/docs/extensionAPI/vscode-api"}}},"todohighlight.include":{"type":"array","default":["**/*.js","**/*.jsx","**/*.ts","**/*.tsx","**/*.html","**/*.php","**/*.css","**/*.scss"],"description":"Glob patterns that defines the files to search for. Only include files you need, DO NOT USE `{**/*.*}` for both permormance and avoiding binary files reason.","items":{"anyOf":[{"type":"string","description":"A glob pattern that defines the files to search for. Only include files you need, DO NOT USE `**/*.*` for both performance and avoiding binary files reason"}]}},"todohighlight.exclude":{"type":"array","default":["**/node_modules/**","**/bower_components/**","**/dist/**","**/build/**","**/.vscode/**","**/.github/**","**/_output/**","**/*.min.*","**/*.map","**/.next/**"],"description":"Glob pattern that defines files and folders to exclude while listing annotations.","items":{"anyOf":[{"type":"string","description":"A glob pattern that defines files and folders to exclude while listing annotations"}]}},"todohighlight.maxFilesForSearch":{"type":"number","default":5120,"description":"Max files for searching"}}}},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","eslint":"^3.6.0","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"97a08c5f-6667-4242-a5c5-045dfb6bd4b9","isBuiltin":false,"isUnderDevelopment":false,"id":"wayou.vscode-todo-highlight","identifier":{"value":"wayou.vscode-todo-highlight","_lower":"wayou.vscode-todo-highlight"},"extensionLocation":{"$mid":1,"fsPath":"/home/rule/.vscode/extensions/wayou.vscode-todo-highlight-1.0.4","path":"/home/rule/.vscode/extensions/wayou.vscode-todo-highlight-1.0.4","scheme":"file"}}]}